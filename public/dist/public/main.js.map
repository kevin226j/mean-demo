{"version":3,"sources":["webpack:///./node_modules/moment/locale sync ^\\.\\/.*$","webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/admin/admin.component.html","webpack:///./src/app/admin/admin.component.ts","webpack:///./src/app/admin/components/album/admin-album.component.css","webpack:///./src/app/admin/components/album/admin-album.component.html","webpack:///./src/app/admin/components/album/admin-album.component.ts","webpack:///./src/app/admin/components/managetag/admin-managetag.component.css","webpack:///./src/app/admin/components/managetag/admin-managetag.component.html","webpack:///./src/app/admin/components/managetag/admin-managetag.component.ts","webpack:///./src/app/admin/components/photos/admin-photos.component.html","webpack:///./src/app/admin/components/photos/admin-photos.component.ts","webpack:///./src/app/admin/services/album/album.service.ts","webpack:///./src/app/admin/services/photos/photos.service.ts","webpack:///./src/app/admin/services/tags/tags.service.ts","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/core/app-routing.ts","webpack:///./src/app/core/footer/footer.html","webpack:///./src/app/core/footer/footer.ts","webpack:///./src/app/core/guards/auth.guard.ts","webpack:///./src/app/core/header/header.html","webpack:///./src/app/core/header/header.ts","webpack:///./src/app/core/helpers/auth.interceptor.ts","webpack:///./src/app/core/login/login.component.html","webpack:///./src/app/core/login/login.component.ts","webpack:///./src/app/core/redirects/401.component.ts","webpack:///./src/app/core/redirects/404.component.ts","webpack:///./src/app/home/components/intro-caption/intro-caption.component.ts","webpack:///./src/app/home/components/intro-image/intro-image.component.html","webpack:///./src/app/home/components/intro-image/intro-image.component.ts","webpack:///./src/app/home/home.component.html","webpack:///./src/app/home/home.component.ts","webpack:///./src/app/portfolio/components/grid-photos/grid-photos.component.html","webpack:///./src/app/portfolio/components/grid-photos/grid-photos.component.ts","webpack:///./src/app/portfolio/components/masonry-album/masonry-album.component.html","webpack:///./src/app/portfolio/components/masonry-album/masonry-album.component.ts","webpack:///./src/app/portfolio/portfolio.component.css","webpack:///./src/app/portfolio/portfolio.component.html","webpack:///./src/app/portfolio/portfolio.component.ts","webpack:///./src/app/portfolio/services/portfolio-album.service.ts","webpack:///./src/app/portfolio/services/portfolio-photos.service.ts","webpack:///./src/app/shared/components/album-header/album-header.component.html","webpack:///./src/app/shared/components/album-header/album-header.component.ts","webpack:///./src/app/shared/components/form/checkbox.ts","webpack:///./src/app/shared/components/form/dropdown.ts","webpack:///./src/app/shared/components/form/input.ts","webpack:///./src/app/shared/components/form/textarea.ts","webpack:///./src/app/shared/components/header-image/header-image.component.html","webpack:///./src/app/shared/components/header-image/header-image.component.ts","webpack:///./src/app/shared/components/upload/upload.component.css","webpack:///./src/app/shared/components/upload/upload.component.html","webpack:///./src/app/shared/components/upload/upload.component.ts","webpack:///./src/app/shared/directives/form-validation.ts","webpack:///./src/app/shared/pipes/filter.ts","webpack:///./src/app/shared/services/api/api.ts","webpack:///./src/app/shared/services/api/auth.service.ts","webpack:///./src/app/shared/services/api/s3/s3.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"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","file":"main.js","sourcesContent":["var map = {\n\t\"./af\": \"./node_modules/moment/locale/af.js\",\n\t\"./af.js\": \"./node_modules/moment/locale/af.js\",\n\t\"./ar\": \"./node_modules/moment/locale/ar.js\",\n\t\"./ar-dz\": \"./node_modules/moment/locale/ar-dz.js\",\n\t\"./ar-dz.js\": \"./node_modules/moment/locale/ar-dz.js\",\n\t\"./ar-kw\": \"./node_modules/moment/locale/ar-kw.js\",\n\t\"./ar-kw.js\": \"./node_modules/moment/locale/ar-kw.js\",\n\t\"./ar-ly\": \"./node_modules/moment/locale/ar-ly.js\",\n\t\"./ar-ly.js\": \"./node_modules/moment/locale/ar-ly.js\",\n\t\"./ar-ma\": \"./node_modules/moment/locale/ar-ma.js\",\n\t\"./ar-ma.js\": \"./node_modules/moment/locale/ar-ma.js\",\n\t\"./ar-sa\": \"./node_modules/moment/locale/ar-sa.js\",\n\t\"./ar-sa.js\": \"./node_modules/moment/locale/ar-sa.js\",\n\t\"./ar-tn\": \"./node_modules/moment/locale/ar-tn.js\",\n\t\"./ar-tn.js\": \"./node_modules/moment/locale/ar-tn.js\",\n\t\"./ar.js\": \"./node_modules/moment/locale/ar.js\",\n\t\"./az\": \"./node_modules/moment/locale/az.js\",\n\t\"./az.js\": \"./node_modules/moment/locale/az.js\",\n\t\"./be\": \"./node_modules/moment/locale/be.js\",\n\t\"./be.js\": \"./node_modules/moment/locale/be.js\",\n\t\"./bg\": \"./node_modules/moment/locale/bg.js\",\n\t\"./bg.js\": \"./node_modules/moment/locale/bg.js\",\n\t\"./bm\": \"./node_modules/moment/locale/bm.js\",\n\t\"./bm.js\": \"./node_modules/moment/locale/bm.js\",\n\t\"./bn\": \"./node_modules/moment/locale/bn.js\",\n\t\"./bn.js\": \"./node_modules/moment/locale/bn.js\",\n\t\"./bo\": \"./node_modules/moment/locale/bo.js\",\n\t\"./bo.js\": \"./node_modules/moment/locale/bo.js\",\n\t\"./br\": \"./node_modules/moment/locale/br.js\",\n\t\"./br.js\": \"./node_modules/moment/locale/br.js\",\n\t\"./bs\": \"./node_modules/moment/locale/bs.js\",\n\t\"./bs.js\": \"./node_modules/moment/locale/bs.js\",\n\t\"./ca\": \"./node_modules/moment/locale/ca.js\",\n\t\"./ca.js\": \"./node_modules/moment/locale/ca.js\",\n\t\"./cs\": \"./node_modules/moment/locale/cs.js\",\n\t\"./cs.js\": \"./node_modules/moment/locale/cs.js\",\n\t\"./cv\": \"./node_modules/moment/locale/cv.js\",\n\t\"./cv.js\": \"./node_modules/moment/locale/cv.js\",\n\t\"./cy\": \"./node_modules/moment/locale/cy.js\",\n\t\"./cy.js\": \"./node_modules/moment/locale/cy.js\",\n\t\"./da\": \"./node_modules/moment/locale/da.js\",\n\t\"./da.js\": \"./node_modules/moment/locale/da.js\",\n\t\"./de\": \"./node_modules/moment/locale/de.js\",\n\t\"./de-at\": \"./node_modules/moment/locale/de-at.js\",\n\t\"./de-at.js\": \"./node_modules/moment/locale/de-at.js\",\n\t\"./de-ch\": \"./node_modules/moment/locale/de-ch.js\",\n\t\"./de-ch.js\": \"./node_modules/moment/locale/de-ch.js\",\n\t\"./de.js\": \"./node_modules/moment/locale/de.js\",\n\t\"./dv\": \"./node_modules/moment/locale/dv.js\",\n\t\"./dv.js\": \"./node_modules/moment/locale/dv.js\",\n\t\"./el\": \"./node_modules/moment/locale/el.js\",\n\t\"./el.js\": \"./node_modules/moment/locale/el.js\",\n\t\"./en-au\": \"./node_modules/moment/locale/en-au.js\",\n\t\"./en-au.js\": \"./node_modules/moment/locale/en-au.js\",\n\t\"./en-ca\": \"./node_modules/moment/locale/en-ca.js\",\n\t\"./en-ca.js\": \"./node_modules/moment/locale/en-ca.js\",\n\t\"./en-gb\": \"./node_modules/moment/locale/en-gb.js\",\n\t\"./en-gb.js\": \"./node_modules/moment/locale/en-gb.js\",\n\t\"./en-ie\": \"./node_modules/moment/locale/en-ie.js\",\n\t\"./en-ie.js\": \"./node_modules/moment/locale/en-ie.js\",\n\t\"./en-il\": \"./node_modules/moment/locale/en-il.js\",\n\t\"./en-il.js\": \"./node_modules/moment/locale/en-il.js\",\n\t\"./en-nz\": \"./node_modules/moment/locale/en-nz.js\",\n\t\"./en-nz.js\": \"./node_modules/moment/locale/en-nz.js\",\n\t\"./eo\": \"./node_modules/moment/locale/eo.js\",\n\t\"./eo.js\": \"./node_modules/moment/locale/eo.js\",\n\t\"./es\": \"./node_modules/moment/locale/es.js\",\n\t\"./es-do\": \"./node_modules/moment/locale/es-do.js\",\n\t\"./es-do.js\": \"./node_modules/moment/locale/es-do.js\",\n\t\"./es-us\": \"./node_modules/moment/locale/es-us.js\",\n\t\"./es-us.js\": \"./node_modules/moment/locale/es-us.js\",\n\t\"./es.js\": \"./node_modules/moment/locale/es.js\",\n\t\"./et\": \"./node_modules/moment/locale/et.js\",\n\t\"./et.js\": \"./node_modules/moment/locale/et.js\",\n\t\"./eu\": \"./node_modules/moment/locale/eu.js\",\n\t\"./eu.js\": \"./node_modules/moment/locale/eu.js\",\n\t\"./fa\": \"./node_modules/moment/locale/fa.js\",\n\t\"./fa.js\": \"./node_modules/moment/locale/fa.js\",\n\t\"./fi\": \"./node_modules/moment/locale/fi.js\",\n\t\"./fi.js\": \"./node_modules/moment/locale/fi.js\",\n\t\"./fo\": \"./node_modules/moment/locale/fo.js\",\n\t\"./fo.js\": \"./node_modules/moment/locale/fo.js\",\n\t\"./fr\": \"./node_modules/moment/locale/fr.js\",\n\t\"./fr-ca\": \"./node_modules/moment/locale/fr-ca.js\",\n\t\"./fr-ca.js\": \"./node_modules/moment/locale/fr-ca.js\",\n\t\"./fr-ch\": \"./node_modules/moment/locale/fr-ch.js\",\n\t\"./fr-ch.js\": \"./node_modules/moment/locale/fr-ch.js\",\n\t\"./fr.js\": \"./node_modules/moment/locale/fr.js\",\n\t\"./fy\": \"./node_modules/moment/locale/fy.js\",\n\t\"./fy.js\": \"./node_modules/moment/locale/fy.js\",\n\t\"./gd\": \"./node_modules/moment/locale/gd.js\",\n\t\"./gd.js\": \"./node_modules/moment/locale/gd.js\",\n\t\"./gl\": \"./node_modules/moment/locale/gl.js\",\n\t\"./gl.js\": \"./node_modules/moment/locale/gl.js\",\n\t\"./gom-latn\": \"./node_modules/moment/locale/gom-latn.js\",\n\t\"./gom-latn.js\": \"./node_modules/moment/locale/gom-latn.js\",\n\t\"./gu\": \"./node_modules/moment/locale/gu.js\",\n\t\"./gu.js\": \"./node_modules/moment/locale/gu.js\",\n\t\"./he\": \"./node_modules/moment/locale/he.js\",\n\t\"./he.js\": \"./node_modules/moment/locale/he.js\",\n\t\"./hi\": \"./node_modules/moment/locale/hi.js\",\n\t\"./hi.js\": \"./node_modules/moment/locale/hi.js\",\n\t\"./hr\": \"./node_modules/moment/locale/hr.js\",\n\t\"./hr.js\": \"./node_modules/moment/locale/hr.js\",\n\t\"./hu\": \"./node_modules/moment/locale/hu.js\",\n\t\"./hu.js\": \"./node_modules/moment/locale/hu.js\",\n\t\"./hy-am\": \"./node_modules/moment/locale/hy-am.js\",\n\t\"./hy-am.js\": \"./node_modules/moment/locale/hy-am.js\",\n\t\"./id\": \"./node_modules/moment/locale/id.js\",\n\t\"./id.js\": \"./node_modules/moment/locale/id.js\",\n\t\"./is\": \"./node_modules/moment/locale/is.js\",\n\t\"./is.js\": \"./node_modules/moment/locale/is.js\",\n\t\"./it\": \"./node_modules/moment/locale/it.js\",\n\t\"./it.js\": \"./node_modules/moment/locale/it.js\",\n\t\"./ja\": \"./node_modules/moment/locale/ja.js\",\n\t\"./ja.js\": \"./node_modules/moment/locale/ja.js\",\n\t\"./jv\": \"./node_modules/moment/locale/jv.js\",\n\t\"./jv.js\": \"./node_modules/moment/locale/jv.js\",\n\t\"./ka\": \"./node_modules/moment/locale/ka.js\",\n\t\"./ka.js\": \"./node_modules/moment/locale/ka.js\",\n\t\"./kk\": \"./node_modules/moment/locale/kk.js\",\n\t\"./kk.js\": \"./node_modules/moment/locale/kk.js\",\n\t\"./km\": \"./node_modules/moment/locale/km.js\",\n\t\"./km.js\": \"./node_modules/moment/locale/km.js\",\n\t\"./kn\": \"./node_modules/moment/locale/kn.js\",\n\t\"./kn.js\": \"./node_modules/moment/locale/kn.js\",\n\t\"./ko\": \"./node_modules/moment/locale/ko.js\",\n\t\"./ko.js\": \"./node_modules/moment/locale/ko.js\",\n\t\"./ky\": \"./node_modules/moment/locale/ky.js\",\n\t\"./ky.js\": \"./node_modules/moment/locale/ky.js\",\n\t\"./lb\": \"./node_modules/moment/locale/lb.js\",\n\t\"./lb.js\": \"./node_modules/moment/locale/lb.js\",\n\t\"./lo\": \"./node_modules/moment/locale/lo.js\",\n\t\"./lo.js\": \"./node_modules/moment/locale/lo.js\",\n\t\"./lt\": \"./node_modules/moment/locale/lt.js\",\n\t\"./lt.js\": \"./node_modules/moment/locale/lt.js\",\n\t\"./lv\": \"./node_modules/moment/locale/lv.js\",\n\t\"./lv.js\": \"./node_modules/moment/locale/lv.js\",\n\t\"./me\": \"./node_modules/moment/locale/me.js\",\n\t\"./me.js\": \"./node_modules/moment/locale/me.js\",\n\t\"./mi\": \"./node_modules/moment/locale/mi.js\",\n\t\"./mi.js\": \"./node_modules/moment/locale/mi.js\",\n\t\"./mk\": \"./node_modules/moment/locale/mk.js\",\n\t\"./mk.js\": \"./node_modules/moment/locale/mk.js\",\n\t\"./ml\": \"./node_modules/moment/locale/ml.js\",\n\t\"./ml.js\": \"./node_modules/moment/locale/ml.js\",\n\t\"./mn\": \"./node_modules/moment/locale/mn.js\",\n\t\"./mn.js\": \"./node_modules/moment/locale/mn.js\",\n\t\"./mr\": \"./node_modules/moment/locale/mr.js\",\n\t\"./mr.js\": \"./node_modules/moment/locale/mr.js\",\n\t\"./ms\": \"./node_modules/moment/locale/ms.js\",\n\t\"./ms-my\": \"./node_modules/moment/locale/ms-my.js\",\n\t\"./ms-my.js\": \"./node_modules/moment/locale/ms-my.js\",\n\t\"./ms.js\": \"./node_modules/moment/locale/ms.js\",\n\t\"./mt\": \"./node_modules/moment/locale/mt.js\",\n\t\"./mt.js\": \"./node_modules/moment/locale/mt.js\",\n\t\"./my\": \"./node_modules/moment/locale/my.js\",\n\t\"./my.js\": \"./node_modules/moment/locale/my.js\",\n\t\"./nb\": \"./node_modules/moment/locale/nb.js\",\n\t\"./nb.js\": \"./node_modules/moment/locale/nb.js\",\n\t\"./ne\": \"./node_modules/moment/locale/ne.js\",\n\t\"./ne.js\": \"./node_modules/moment/locale/ne.js\",\n\t\"./nl\": \"./node_modules/moment/locale/nl.js\",\n\t\"./nl-be\": \"./node_modules/moment/locale/nl-be.js\",\n\t\"./nl-be.js\": \"./node_modules/moment/locale/nl-be.js\",\n\t\"./nl.js\": \"./node_modules/moment/locale/nl.js\",\n\t\"./nn\": \"./node_modules/moment/locale/nn.js\",\n\t\"./nn.js\": \"./node_modules/moment/locale/nn.js\",\n\t\"./pa-in\": \"./node_modules/moment/locale/pa-in.js\",\n\t\"./pa-in.js\": \"./node_modules/moment/locale/pa-in.js\",\n\t\"./pl\": \"./node_modules/moment/locale/pl.js\",\n\t\"./pl.js\": \"./node_modules/moment/locale/pl.js\",\n\t\"./pt\": \"./node_modules/moment/locale/pt.js\",\n\t\"./pt-br\": \"./node_modules/moment/locale/pt-br.js\",\n\t\"./pt-br.js\": \"./node_modules/moment/locale/pt-br.js\",\n\t\"./pt.js\": \"./node_modules/moment/locale/pt.js\",\n\t\"./ro\": \"./node_modules/moment/locale/ro.js\",\n\t\"./ro.js\": \"./node_modules/moment/locale/ro.js\",\n\t\"./ru\": \"./node_modules/moment/locale/ru.js\",\n\t\"./ru.js\": \"./node_modules/moment/locale/ru.js\",\n\t\"./sd\": \"./node_modules/moment/locale/sd.js\",\n\t\"./sd.js\": \"./node_modules/moment/locale/sd.js\",\n\t\"./se\": \"./node_modules/moment/locale/se.js\",\n\t\"./se.js\": \"./node_modules/moment/locale/se.js\",\n\t\"./si\": \"./node_modules/moment/locale/si.js\",\n\t\"./si.js\": \"./node_modules/moment/locale/si.js\",\n\t\"./sk\": \"./node_modules/moment/locale/sk.js\",\n\t\"./sk.js\": \"./node_modules/moment/locale/sk.js\",\n\t\"./sl\": \"./node_modules/moment/locale/sl.js\",\n\t\"./sl.js\": \"./node_modules/moment/locale/sl.js\",\n\t\"./sq\": \"./node_modules/moment/locale/sq.js\",\n\t\"./sq.js\": \"./node_modules/moment/locale/sq.js\",\n\t\"./sr\": \"./node_modules/moment/locale/sr.js\",\n\t\"./sr-cyrl\": \"./node_modules/moment/locale/sr-cyrl.js\",\n\t\"./sr-cyrl.js\": \"./node_modules/moment/locale/sr-cyrl.js\",\n\t\"./sr.js\": \"./node_modules/moment/locale/sr.js\",\n\t\"./ss\": \"./node_modules/moment/locale/ss.js\",\n\t\"./ss.js\": \"./node_modules/moment/locale/ss.js\",\n\t\"./sv\": \"./node_modules/moment/locale/sv.js\",\n\t\"./sv.js\": \"./node_modules/moment/locale/sv.js\",\n\t\"./sw\": \"./node_modules/moment/locale/sw.js\",\n\t\"./sw.js\": \"./node_modules/moment/locale/sw.js\",\n\t\"./ta\": \"./node_modules/moment/locale/ta.js\",\n\t\"./ta.js\": \"./node_modules/moment/locale/ta.js\",\n\t\"./te\": \"./node_modules/moment/locale/te.js\",\n\t\"./te.js\": \"./node_modules/moment/locale/te.js\",\n\t\"./tet\": \"./node_modules/moment/locale/tet.js\",\n\t\"./tet.js\": \"./node_modules/moment/locale/tet.js\",\n\t\"./tg\": \"./node_modules/moment/locale/tg.js\",\n\t\"./tg.js\": \"./node_modules/moment/locale/tg.js\",\n\t\"./th\": \"./node_modules/moment/locale/th.js\",\n\t\"./th.js\": \"./node_modules/moment/locale/th.js\",\n\t\"./tl-ph\": \"./node_modules/moment/locale/tl-ph.js\",\n\t\"./tl-ph.js\": \"./node_modules/moment/locale/tl-ph.js\",\n\t\"./tlh\": \"./node_modules/moment/locale/tlh.js\",\n\t\"./tlh.js\": \"./node_modules/moment/locale/tlh.js\",\n\t\"./tr\": \"./node_modules/moment/locale/tr.js\",\n\t\"./tr.js\": \"./node_modules/moment/locale/tr.js\",\n\t\"./tzl\": \"./node_modules/moment/locale/tzl.js\",\n\t\"./tzl.js\": \"./node_modules/moment/locale/tzl.js\",\n\t\"./tzm\": \"./node_modules/moment/locale/tzm.js\",\n\t\"./tzm-latn\": \"./node_modules/moment/locale/tzm-latn.js\",\n\t\"./tzm-latn.js\": \"./node_modules/moment/locale/tzm-latn.js\",\n\t\"./tzm.js\": \"./node_modules/moment/locale/tzm.js\",\n\t\"./ug-cn\": \"./node_modules/moment/locale/ug-cn.js\",\n\t\"./ug-cn.js\": \"./node_modules/moment/locale/ug-cn.js\",\n\t\"./uk\": \"./node_modules/moment/locale/uk.js\",\n\t\"./uk.js\": \"./node_modules/moment/locale/uk.js\",\n\t\"./ur\": \"./node_modules/moment/locale/ur.js\",\n\t\"./ur.js\": \"./node_modules/moment/locale/ur.js\",\n\t\"./uz\": \"./node_modules/moment/locale/uz.js\",\n\t\"./uz-latn\": \"./node_modules/moment/locale/uz-latn.js\",\n\t\"./uz-latn.js\": \"./node_modules/moment/locale/uz-latn.js\",\n\t\"./uz.js\": \"./node_modules/moment/locale/uz.js\",\n\t\"./vi\": \"./node_modules/moment/locale/vi.js\",\n\t\"./vi.js\": \"./node_modules/moment/locale/vi.js\",\n\t\"./x-pseudo\": \"./node_modules/moment/locale/x-pseudo.js\",\n\t\"./x-pseudo.js\": \"./node_modules/moment/locale/x-pseudo.js\",\n\t\"./yo\": \"./node_modules/moment/locale/yo.js\",\n\t\"./yo.js\": \"./node_modules/moment/locale/yo.js\",\n\t\"./zh-cn\": \"./node_modules/moment/locale/zh-cn.js\",\n\t\"./zh-cn.js\": \"./node_modules/moment/locale/zh-cn.js\",\n\t\"./zh-hk\": \"./node_modules/moment/locale/zh-hk.js\",\n\t\"./zh-hk.js\": \"./node_modules/moment/locale/zh-hk.js\",\n\t\"./zh-tw\": \"./node_modules/moment/locale/zh-tw.js\",\n\t\"./zh-tw.js\": \"./node_modules/moment/locale/zh-tw.js\"\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tvar id = map[req];\n\tif(!(id + 1)) { // check for number or string\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn id;\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = \"./node_modules/moment/locale sync recursive ^\\\\.\\\\/.*$\";","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"<!-- <section id=\\\"page-header-secion\\\" class=\\\"alter-heading\\\" header-image-component [props]=\\\"{\\n    image: '',\\n    title : 'Dashboard',\\n    breadcrumb1: 'Admin',\\n    breadcrumb2: 'Dashboard'\\n    }\\\">\\n</section> -->\\n\\n<section id=\\\"content-section\\\" class=\\\"page\\\">\\n\\n  <!-- <ngx-spinner bdColor=\\\"rgba(20, 20, 20, 0.8)\\\" size=\\\"large\\\" color=\\\"#fff\\\" type=\\\"line-scale\\\"></ngx-spinner> -->\\n\\n  <div class=\\\"container max-width-1300\\\">\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-md-12 col-md-push-0\\\">\\n\\n        <!-- Begin content wrap -->\\n        <div class=\\\"content-wrap\\\">\\n\\n          <!-- Begin blog list\\n                            ===================== -->\\n          <div class=\\\"blog-list\\\">\\n            <div class=\\\"row\\\">\\n\\n              <!-- Left column -->\\n              <div class=\\\"col-md-9 col-md-push-3\\\">\\n\\n\\n                <div class=\\\"blog-post-comments\\\">\\n\\n                  <div *ngIf=\\\"current === 'welcome'\\\">\\n                    <div class=\\\"bli-info\\\">\\n\\n                      <div class=\\\"bli-meta\\\">\\n                        <h4>Dashboard Information:</h4>\\n                      </div>\\n\\n                      <ol class=\\\"bli-desc\\\">\\n                        <li>After the instance of logging in, this application will expire after one full day.</li>\\n                        <li>Left side panel will allow you to navigate between each manageable component. Note that,\\n                          there is no auto-save; meaning if a new tab is clicked, informaiton stored on a previous tab\\n                          will be lost.\\n                        </li>\\n                        <li>This dashboard enables the user to perform CRUD operations for the following sections:\\n                          <ul>\\n                            <li>\\n                              <i>Tags</i>: allowing user to manage tags. Note: if an album does not contain a tag, it will NOT\\n                              apear on drop-down, or filter component.\\n                              <br />\\n                              <div class=\\\"bli-button\\\">\\n                                <a (click)=\\\"setComponent('tag')\\\" class=\\\"btn btn-dark btn-rounded-5x btn-sm\\\"> Edit Tags Now!</a>\\n                              </div>\\n                            </li>\\n\\n\\n                            <li>\\n                              <i>Album</i>: allowing user to customize an album. It is recommended to create an album as the following step from the tag section above. If\\n                              tag is already in place, proceed in this section.\\n                              <br />\\n                              <div class=\\\"bli-button\\\">\\n                                <a (click)=\\\"setComponent('album')\\\" class=\\\"btn btn-dark btn-rounded-5x btn-sm\\\"> Edit Albums Now!</a>\\n                              </div>\\n                            </li>\\n\\n                            <li>\\n                                <i>Photos</i>: allowing user to\\n                                preview photos to upload before adding them to selected album. Note, there is some wait time when viewing current photos as its pulling data from multiple resources.\\n                                <br />\\n                                <div class=\\\"bli-button\\\">\\n                                  <a (click)=\\\"setComponent('photos')\\\" class=\\\"btn btn-dark btn-rounded-5x btn-sm\\\"> Edit Photos Now!</a>\\n                                </div>\\n                              </li>\\n                          </ul>\\n                        </li>\\n                        <li>When you're done, go back to the homepage to checkout your changes!</li>\\n                      </ol>\\n\\n                    </div>\\n                  </div>\\n\\n                  <!-- PLACE FORMS HERE -->\\n                  <div *ngIf=\\\"current === 'tag'\\\">\\n                    <admin-managetag-component></admin-managetag-component>\\n                  </div>\\n\\n                  <div *ngIf=\\\"current === 'album'\\\">\\n                    <admin-album-component></admin-album-component>\\n                  </div>\\n\\n                  <div *ngIf=\\\"current === 'photos'\\\">\\n                    <admin-photos-component></admin-photos-component>\\n                  </div>\\n                </div>\\n\\n              </div> <!-- /.col (Left column) -->\\n\\n\\n              <!-- Right column -->\\n              <div class=\\\"col-md-3 col-md-pull-9\\\">\\n\\n                <!-- Begin sidebar \\n                                        ==================== -->\\n                <div class=\\\"sidebar sidebar-left\\\">\\n                  <div class=\\\"row\\\">\\n\\n\\n\\n                    <div class=\\\"col-md-12 col-sm-6\\\">\\n                      <!-- Begin sidebar widget -->\\n                      <div class=\\\"sidebar-widget sidebar-categories\\\">\\n                        <h3 class=\\\"sidebar-heading\\\">Dashboard Components</h3>\\n                        <hr class=\\\"hr-short\\\">\\n                        <ul class=\\\"list-unstyled\\\">\\n                          <li><a (click)=\\\"setComponent('welcome')\\\">Welcome</a></li>\\n                          <li><a (click)=\\\"setComponent('tag')\\\">Tags</a></li>\\n                          <li><a (click)=\\\"setComponent('album')\\\">Album</a></li>\\n                          <li><a (click)=\\\"setComponent('photos')\\\">Photos</a></li>\\n                          <li><a></a></li>\\n                        </ul>\\n                      </div>\\n                      <swal #welcomeSwal [options]=\\\"{title : 'Welcome Back!',type : 'success', toast: false,position: 'center', background: '#fff', showCancelButton: false, showConfirmButton: false, timer: 3000}\\\">\\n                      </swal>\\n                      <!-- End sidebar widget -->\\n                    </div> <!-- /.col -->\\n\\n                  </div> <!-- /.row -->\\n                </div>\\n                <!-- End sidebar -->\\n\\n              </div> <!-- /.col (Right column) -->\\n\\n            </div> <!-- /.row -->\\n          </div>\\n          <!-- End blog-list -->\\n\\n        </div>\\n        <!-- End content wrap -->\\n\\n      </div> <!-- /.col -->\\n    </div> <!-- /.row -->\\n  </div> <!-- /.container -->\\n\\n\\n</section>\\n<!-- End content section -->\\n\"","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { AuthService } from '../shared/services/api/auth.service';\nimport { SwalComponent } from '@toverux/ngx-sweetalert2';\nimport { Router } from '@angular/router';\nimport { NgxSpinnerService } from 'ngx-spinner';\nimport * as moment from \"moment\";\n\n@Component({\n    selector: 'admin-component',\n    templateUrl: './admin.component.html',\n    styles: [\n        `\n            a:hover {\n                cursor: pointer;\n            }\n        `\n    ]\n})\n\nexport class AdminComponent implements OnInit {\n\n    @ViewChild('welcomeSwal') private welcomeSwal: SwalComponent;\n\n    public current: string;\n    public showLogout: boolean;\n\n    constructor(public authService: AuthService, private router: Router, private spinner: NgxSpinnerService) {\n        this.current = 'welcome';\n    }\n\n    ngOnInit() {\n        if (this.authService.getExpiration() < moment().unix()) {\n            this.logout();\n        } else {\n            this.spinner.show()\n            setTimeout(() => {\n                this.spinner.hide();\n            }, 2000);\n            if (this.authService.isLoggedIn) {\n                this.showLogout = true;\n            }\n        }\n    }\n\n    public logout() {\n        this.spinner.show();\n        this.authService.logout();\n        setTimeout(() => {\n            this.spinner.hide();\n            window.location.href = 'login';\n        }, 2500)\n\n    }\n\n    public setComponent(str): void {\n        switch (str) {\n            case 'album':\n                this.current = str;\n                break;\n            case 'photos':\n                this.current = str;\n                break;\n            case 'tag':\n                this.current = str;\n                break;\n            case 'welcome':\n                this.current = str;\n        }\n    }\n}","module.exports = \"li .edit {\\n    float: right;\\n    right: 15px;\\n}\\n\\nli .edit:hover {\\n    cursor:pointer;\\n    color: #987F28;\\n}\\n\\n.remove {\\n    float:right;\\n}\\n\\nli .remove:hover {\\n    cursor:pointer;\\n    color: #987F28;\\n}\\n\\n#content-section {\\n    padding: none !important\\n}\"","module.exports = \"<div class=\\\"row\\\">\\n  <div class=\\\"col-md-8\\\">\\n    <!-- Begin Form -->\\n    <form [formGroup]=\\\"albumForm\\\" id=\\\"post-comment-form\\\">\\n      <h2>Album:</h2>\\n      <div class=\\\"row\\\">\\n        <div class=\\\"col-lg-12\\\">\\n          <dropdown-component [items]=\\\"categoryItems\\\" [control]=\\\"albumForm.controls['category']\\\" [placeholder]=\\\"'Select Category *'\\\"></dropdown-component>\\n        </div>\\n      </div>\\n      <div class=\\\"row\\\">\\n        <div class=\\\"col-lg-6\\\">\\n          <input-component [type]=\\\"'text'\\\" [control]=\\\"albumForm.controls['name']\\\" [placeholder]=\\\"'Album Name *'\\\"></input-component>\\n        </div>\\n        <div class=\\\"col-lg-6\\\">\\n          <upload-component [control]=\\\"albumForm.controls['image']\\\" (returnFile)=\\\"getFile($event)\\\"></upload-component>\\n        </div>\\n      </div>\\n      <div class=\\\"row\\\">\\n        <div class=\\\"col-lg-6\\\">\\n          <dropdown-component [items]=\\\"tagItems\\\" [control]=\\\"albumForm.controls['tag']\\\" [placeholder]=\\\"'Select Tag *'\\\"></dropdown-component>\\n        </div>\\n        <!-- <div class=\\\"col-lg-3\\\">\\n          <input-component [type]=\\\"'number'\\\" [control]=\\\"albumForm.controls['total']\\\" [placeholder]=\\\"'Total # *'\\\"></input-component>\\n        </div> -->\\n      </div>\\n      <div class=\\\"row\\\">\\n        <div class=\\\"col-lg-12\\\">\\n          <textarea-component [control]=\\\"albumForm.controls['description']\\\" [placeholder]=\\\"'Description *'\\\" [rows]=5></textarea-component>\\n        </div>\\n      </div>\\n      <div class=\\\"row\\\">\\n        <div class=\\\"col-lg-12\\\">\\n          <button type=\\\"submit\\\" class=\\\"btn btn-rounded-5x\\\" [ngClass]=\\\"status.id ? 'btn-primary-bordered' : 'btn-primary'\\\"\\n            [tsSubmitIfValid]=\\\"albumForm\\\" (valid)=\\\"onSubmit()\\\">{{status.id ? 'Update!' : 'Submit' }}</button>\\n        </div>\\n      </div>\\n    </form>\\n    <!-- End Form -->\\n  </div>\\n\\n  <div class=\\\"col-md-4\\\">\\n    <div class=\\\"sidebar sidebar-right\\\">\\n      <div class=\\\"row\\\">\\n        <div class=\\\"col-md-12 col-sm-6\\\">\\n          <!-- Begin sidebar widget -->\\n          <div class=\\\"sidebar-widget sidebar-categories\\\">\\n            <h3 class=\\\"sidebar-heading\\\">Album List</h3>\\n            <hr class=\\\"hr-short\\\">\\n            <ul class=\\\"list-unstyled\\\">\\n              <li *ngFor=\\\"let album of albums\\\">\\n                <label class=\\\"list-item\\\">{{album.name}}</label>\\n                <span class=\\\"remove glyphicon glyphicon-trash\\\" aria-hidden=\\\"true\\\" (click)=\\\"onClick(album._id,'remove')\\\"></span>\\n                <span class=\\\"edit glyphicon glyphicon-wrench\\\" aria-hidden=\\\"true\\\" (click)=\\\"onClick(album._id,'edit')\\\"></span>\\n              </li>\\n            </ul>\\n          </div>\\n          <!-- End sidebar widget -->\\n        </div> <!-- /.col -->\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\\n<swal #successSwal [options]=\\\"{title : 'Success!',type : 'success', toast: false,position: 'center', background: '#fff', showCancelButton: false, showConfirmButton: false, timer: 2000}\\\">\\n</swal>\\n\\n<swal #deleteSwal [options]=\\\"{ width: '40%',title :'Are you sure?' ,type: 'error' ,showCancelButton: true,  showConfirmButton: true, background: '#fff', cancelButtonColor: '#aaa',confirmButtonText: 'Yes, delete!',  confirmButtonColor: '#EC3A35'}\\\">\\n</swal>\\n\"","import { Component, DoCheck, ChangeDetectorRef, ViewChild, OnInit} from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { S3Service } from '../../../shared/services/api/s3/s3.service';\nimport { AlbumService } from '../../services/album/album.service';\nimport { IAlbum } from '../../services/album/album.entity';\nimport { Observable } from 'rxjs';\nimport { NgxSpinnerService } from 'ngx-spinner';\nimport { SwalComponent } from '@toverux/ngx-sweetalert2';\nimport { TagService } from '../../services/tags/tags.service';\n\n\nclass Status {\n    id: string;\n    selectedImage: File\n}\n\n@Component({\n    selector: 'admin-album-component',\n    templateUrl: './admin-album.component.html',\n    styleUrls: ['./admin-album.component.css']\n})\n\nexport class AdminAlbumComponent implements OnInit {\n    \n    @ViewChild('successSwal') private successSwal: SwalComponent;\n    @ViewChild('deleteSwal') private deleteSwal: SwalComponent;\n\n    /* variable intialization \n    */\n    public albumForm: FormGroup;\n    public albums: IAlbum[];\n    public status = new Status();\n    public tagItems: string[];\n    public categoryItems: string[];\n\n    constructor(private formBuilder: FormBuilder, private s3: S3Service, private albumService: AlbumService, private tagService: TagService, private spinner: NgxSpinnerService) {\n        this.buildForm(); //build form group\n        this.getAlbums(); //load albums from server\n        this.categoryItems = [\"Portfolio\"];\n    }\n\n\n\n    /* function that builds the form controls using Model Driven Forms architecture\n    */\n    private buildForm(): void {\n        this.albumForm = this.formBuilder.group({\n            name: this.formBuilder.control('', [Validators.required, Validators.min(1)]),\n            image: this.formBuilder.control(null, [Validators.required, Validators.min(2)]),\n            description: this.formBuilder.control('', [Validators.required, Validators.min(1)]),\n            tag: this.formBuilder.control(null, [Validators.required, Validators.min(1)]),\n            category: this.formBuilder.control('Portfolio', [Validators.required, Validators.min(1)])\n        });\n    }\n \n    ngOnInit(){\n        this.getTags(); //load up tags from server\n    }\n\n\n    /* function that allows file to be transfered from <upload-component> and ready for processing\n        * @e is of event emiter result. return is an object with 'src' and 'file'\n    */\n    public getFile(e: any): void {\n        this.status.selectedImage = e.file;\n    }\n\n\n\n    /* function to reset form controls to initial state. \n    */\n    private clearForm(): void {\n        setTimeout(() => { \n            this.albumForm.reset(); \n        }, 200);\n    }\n\n\n\n    /* function to refresh album data after a successful DELETE, UPDATE, OR POST\n    */\n    private refreshData(): void {\n        setTimeout(() => this.getAlbums(), 200);\n    }\n\n\n\n    /* function to refresh all items in current component\n    */\n    private refreshComponent(): void {\n        this.clearForm();\n        this.refreshData();\n        this.status = new Status();\n    }\n\n    /* function that retrieves all tags with a GET http request to server\n    */\n    private getTags(): void {\n        this.tagService.GetTags().subscribe((res: any) => { \n            let out = [];\n            for(let i = 0, n = res.items.length; i < n; i++){\n                out.push(res.items[i].tagName);\n            }\n            this.tagItems = out; \n        });\n    }\n\n\n    /* function that retrieves all albums with a GET http request to server\n    */\n    private getAlbums(): void {\n        this.albumService.GetAll().subscribe((res: any) => { this.albums = res.items; });\n    }\n\n\n\n    /* function runs when 'edit' or 'remove' icon is clicked. 'edit' uses GET BY ID to retrieve album info. Info is then patched to form control values\n        * @id takes the id of the album\n        * @action determines the action of the function, to either DELETE or UPDATE\n    */\n    private onClick(id: string, action: string) {\n        if (action === 'edit') {\n            this.albumService.GetById(id).subscribe((res: any) => {\n                this.albumForm.patchValue(res.item); this.setStatus(res.item);\n            })\n        } else if (action === 'remove') {\n            this.deleteSwal.show().then(res => {\n                if (res.value) {\n                    this.spinner.show();\n                    this.albumService.Delete(id).add((res: any) => {\n                        this.refreshComponent();\n                        setTimeout(() => { this.spinner.hide(); }, 1000);\n                    })\n                }\n            })\n        }\n    }\n\n\n\n    /* function will run to set current status state to determine id of selected album.\n    */\n    private setStatus(info) {\n        this.status.id = info._id;\n    }\n\n\n\n    /* function will submit form data on a POST or UPDATE request. Determined by status.id.\n    */\n    public onSubmit(): void {\n        this.spinner.show();\n        if (this.status.id) { // update\n            this.albumService.Update(this.albumForm.value, this.status.id, this.status.selectedImage).subscribe((res) => {\n                this.refreshComponent()\n                setTimeout(() => { this.spinner.hide() }, 1000);\n                setTimeout(() => { this.successSwal.show(); }, 1000);\n            })\n        } else { //post\n            this.albumService.Post(this.albumForm.value, this.status.selectedImage).subscribe(res => {\n                this.refreshComponent();\n                setTimeout(() => { this.spinner.hide() }, 1000);\n                setTimeout(() => { this.successSwal.show(); }, 1000);\n            })\n        }\n\n    }\n    \n}\n\n\n\n\n\n","module.exports = \"li .edit {\\n    float: right;\\n    right: 15px;\\n}\\n\\nli .edit:hover {\\n    cursor:pointer;\\n    color: #987F28;\\n}\\n\\n.remove {\\n    float:right;\\n}\\n\\nli .remove:hover {\\n    cursor:pointer;\\n    color: #987F28;\\n}\\n\\n#content-section {\\n    padding: none !important\\n}\"","module.exports = \"<div class=\\\"row\\\">\\n  <div class=\\\"col-md-8\\\">\\n    <!-- Begin Form -->\\n    <form [formGroup]=\\\"tagForm\\\" id=\\\"post-comment-form\\\">\\n      <h2>Tags:</h2>\\n\\n      <div class=\\\"row\\\">\\n        <div class=\\\"col-lg-12\\\">\\n          <input-component [type]=\\\"'text'\\\" [control]=\\\"tagForm.controls['tagName']\\\" [placeholder]=\\\"'Tag Name *'\\\"></input-component>\\n        </div>\\n      </div>\\n\\n      <div class=\\\"row\\\">\\n        <div class=\\\"col-lg-12\\\">\\n          <button type=\\\"submit\\\" class=\\\"btn btn-rounded-5x\\\" style = \\\"width:100%\\\" [ngClass]=\\\"status.id ? 'btn-primary-bordered' : 'btn-primary'\\\"\\n            [tsSubmitIfValid]=\\\"tagForm\\\" (valid)=\\\"onSubmit()\\\">{{status.id ? 'Update!' : 'Submit' }}</button>\\n        </div>\\n      </div>\\n      <div class = \\\"row\\\"><p></p></div>\\n      <div class = \\\"row\\\"><p></p></div>\\n      <div class = \\\"row\\\"><p></p></div>\\n      <div class = \\\"row\\\"><p></p></div>\\n      <div class = \\\"row\\\"><p></p></div>\\n      <div class = \\\"row\\\"><p></p></div>\\n    </form>\\n    <!-- End Form -->\\n  </div>\\n\\n  <div class=\\\"col-md-4\\\">\\n    <div class=\\\"sidebar sidebar-right\\\">\\n      <div class=\\\"row\\\">\\n        <div class=\\\"col-md-12 col-sm-6\\\">\\n          <!-- Begin sidebar widget -->\\n          <div class=\\\"sidebar-widget sidebar-categories\\\">\\n            <h3 class=\\\"sidebar-heading\\\">Tag List</h3>\\n            <hr class=\\\"hr-short\\\">\\n            <ul class=\\\"list-unstyled\\\">\\n              <li *ngFor=\\\"let tag of tags\\\">\\n                <label class=\\\"list-item\\\">{{tag.tagName}}</label>\\n                <span class=\\\"remove glyphicon glyphicon-trash\\\" aria-hidden=\\\"true\\\" (click)=\\\"onClick(tag._id,'remove')\\\"></span>\\n                <span class=\\\"edit glyphicon glyphicon-wrench\\\" aria-hidden=\\\"true\\\" (click)=\\\"onClick(tag._id,'edit')\\\"></span>\\n              </li>\\n            </ul>\\n          </div>\\n          <!-- End sidebar widget -->\\n        </div> <!-- /.col -->\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\\n<swal #successSwal [options]=\\\"{title : 'Success!',type : 'success', toast: false,position: 'center', background: '#fff', showCancelButton: false, showConfirmButton: false, timer: 2000}\\\">\\n</swal>\\n\\n<swal #deleteSwal [options]=\\\"{ width: '40%',title :'Are you sure?' ,type: 'error' ,showCancelButton: true,  showConfirmButton: true, background: '#fff', cancelButtonColor: '#aaa',confirmButtonText: 'Yes, delete!',  confirmButtonColor: '#EC3A35'}\\\">\\n</swal>\\n\"","import { Component, DoCheck, ChangeDetectorRef, ViewChild} from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { S3Service } from '../../../shared/services/api/s3/s3.service';\nimport { AlbumService } from '../../services/album/album.service';\nimport { IAlbum } from '../../services/album/album.entity';\nimport { Observable } from 'rxjs';\nimport { NgxSpinnerService } from 'ngx-spinner';\nimport { SwalComponent } from '@toverux/ngx-sweetalert2';\nimport { TagService } from '../../services/tags/tags.service';\n\n\nclass Status {\n    id: string;\n    selectedImage: File\n}\n\n@Component({\n    selector: 'admin-managetag-component',\n    templateUrl: './admin-managetag.component.html',\n    styleUrls: ['./admin-managetag.component.css']\n})\n\nexport class AdminManageTagComponent {\n    \n    @ViewChild('successSwal') private successSwal: SwalComponent;\n    @ViewChild('deleteSwal') private deleteSwal: SwalComponent;\n\n    /* variable intialization \n    */\n    public tagForm: FormGroup;\n    public tags: any[];\n    public status = new Status();\n\n\n    constructor(private formBuilder: FormBuilder, private tagService: TagService, private spinner: NgxSpinnerService) {\n        this.buildForm(); //build form group\n        this.getTags(); //load albums from server\n        //this.tagItems = [\"Portraits\", \"Family\", \"Location\", \"Studio\", \"Modern Look\", \"Restored Images\", \"Restaurants/ Bars\", \"Small Businesses\", \"Products\", \"Halloween\"];\n        //this.categoryItems = [\"Overview\", \"Commercial\", \"Projects\"];\n    }\n\n\n\n    /* function that builds the form controls using Model Driven Forms architecture\n    */\n    private buildForm(): void {\n        this.tagForm = this.formBuilder.group({\n            tagName: this.formBuilder.control('', [Validators.required, Validators.min(1)])\n        });\n    }\n \n\n    /* function to reset form controls to initial state. \n    */\n    private clearForm(): void {\n        setTimeout(() => { \n            this.tagForm.reset(); \n        }, 200);\n    }\n\n\n\n    /* function to refresh album data after a successful DELETE, UPDATE, OR POST\n    */\n    private refreshData(): void {\n        setTimeout(() => this.getTags(), 200);\n    }\n\n\n\n    /* function to refresh all items in current component\n    */\n    private refreshComponent(): void {\n        this.clearForm();\n        this.refreshData();\n        this.status = new Status();\n    }\n\n\n\n    /* function that retrieves all albums with a GET http request to server\n    */\n    private getTags(): void {\n        this.tagService.GetTags().subscribe((res: any) => { this.tags = res.items;});\n    }\n\n\n\n    /* function runs when 'edit' or 'remove' icon is clicked. 'edit' uses GET BY ID to retrieve album info. Info is then patched to form control values\n        * @id takes the id of the album\n        * @action determines the action of the function, to either DELETE or UPDATE\n    */\n    private onClick(id: string, action: string) {\n        if (action === 'edit') {\n            this.tagService.GetTagById(id).subscribe((res: any) => {\n                this.tagForm.patchValue(res.item); this.setStatus(res.item);\n            })\n        } else if (action === 'remove') {\n            this.deleteSwal.show().then(res => {\n                if (res.value) {\n                    this.spinner.show();\n                    this.tagService.Delete(id).subscribe((res: any) => {\n                        this.refreshComponent();\n                        setTimeout(() => { this.spinner.hide(); }, 1000);\n                    })\n                }\n            })\n        }\n    }\n\n\n\n    /* function will run to set current status state to determine id of selected album.\n    */\n    private setStatus(info) {\n        this.status.id = info._id;\n    }\n\n\n\n    /* function will submit form data on a POST or UPDATE request. Determined by status.id.\n    */\n    public onSubmit(): void {\n        this.spinner.show();\n        if (this.status.id) { // update\n            this.tagService.Update(this.status.id, this.tagForm.value).subscribe((res) => {\n                this.refreshComponent()\n                setTimeout(() => { this.spinner.hide() }, 1000);\n                setTimeout(() => { this.successSwal.show(); }, 1000);\n            })\n        } else { //post\n            this.tagService.Post(this.tagForm.value).subscribe(res => {\n                this.refreshComponent();\n                setTimeout(() => { this.spinner.hide() }, 1000);\n                setTimeout(() => { this.successSwal.show(); }, 1000);\n            })\n        }\n\n    }\n    \n}\n","module.exports = \"<form id=\\\"post-comment-form\\\" [formGroup]=\\\"photoForm\\\">\\n  <h1>Photos:</h1>\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-lg-6\\\">\\n      <dropdown-component (selection)=\\\"getPhotos($event)\\\" [markFirst]=\\\"true\\\" [items]=\\\"albumItems\\\" [control]=\\\"photoForm.controls['albumName']\\\"\\n        [placeholder]=\\\"'Select ALbum *'\\\" (change)=\\\"getPhotos($event)\\\"></dropdown-component>\\n\\n    </div>\\n    <div class=\\\"col-lg-6\\\">\\n      <upload-component [control]=\\\"photoForm.controls['image']\\\" (returnFile)=\\\"getFile($event)\\\"></upload-component>\\n    </div>\\n  </div>\\n\\n  <!-- PREVIEW PHOTOS  -->\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-md-12\\\">\\n      <h2>Preview Photos</h2>\\n      <!-- Begin content wrap -->\\n      <div class=\\\"content-wrap\\\">\\n        <div class=\\\"isotope gutter-2 col-6\\\">\\n          <div id=\\\"gallery\\\" class=\\\"isotope-items-wrap lightgallery hover-center hover-dark\\\">\\n\\n            <ngx-masonry [options]=\\\"myOptions\\\" [useImagesLoaded]=\\\"true\\\">\\n              <ngxMasonryItem class=\\\"isotope-item\\\" *ngFor=\\\"let photo of photosToDisplay; let i = index\\\" (click)=\\\"onDelete(i)\\\">\\n                <!-- Begin album single item -->\\n                <div class=\\\"grid\\\">\\n                  <div class=\\\"grid-item\\\">\\n                    <div class=\\\"album-single-item\\\">\\n                      <img class=\\\"asi-img imagesize\\\" src=\\\"{{photo}}\\\" alt=\\\"image\\\">\\n                      <!-- Begin item cover -->\\n                      <div class=\\\"asi-cover\\\">\\n                        <a class=\\\"asi-link lg-trigger\\\">\\n                          <div class=\\\"asi-info\\\">\\n                            <span class=\\\"s-icon\\\"><i class=\\\"fas fa-trash-alt\\\"></i></span>\\n                          </div>\\n                        </a>\\n                      </div>\\n                      <!-- End item cover -->\\n                    </div>\\n                  </div>\\n                </div>\\n              </ngxMasonryItem>\\n            </ngx-masonry>\\n\\n\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n\\n\\n  <!-- CURRENT PHOTOS IN ALBUM  -->\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-md-12\\\">\\n      <h2>Current Photos</h2>\\n      <!-- Begin content wrap -->\\n      <div class=\\\"content-wrap\\\">\\n        <div class=\\\"isotope gutter-2 col-6\\\">\\n          <div id=\\\"gallery\\\" class=\\\"isotope-items-wrap lightgallery hover-center hover-dark\\\">\\n            <ngx-masonry [options]=\\\"myOptions\\\" [useImagesLoaded]=\\\"true\\\">\\n              <ngxMasonryItem class=\\\"isotope-item\\\" *ngFor=\\\"let item of photosFromAlbum; let i = index\\\" (click)=\\\"onDelete(item._id, item.image)\\\">\\n                <!-- Begin album single item -->\\n                <div class=\\\"grid\\\">\\n                  <div class=\\\"grid-item\\\">\\n                    <div class=\\\"album-single-item\\\">\\n                      <img class=\\\"asi-img imagesize\\\" src=\\\"{{ awsbucket + item.image}}\\\" alt=\\\"image\\\">\\n                      <!-- Begin item cover -->\\n                      <div class=\\\"asi-cover\\\">\\n                        <a class=\\\"asi-link lg-trigger\\\">\\n                          <div class=\\\"asi-info\\\">\\n                            <span class=\\\"s-icon\\\"><i class=\\\"fas fa-trash-alt\\\"></i></span>\\n                          </div>\\n                        </a>\\n                      </div>\\n                      <!-- End item cover -->\\n                    </div>\\n                  </div>\\n                </div>\\n                <!-- End album single item -->\\n              </ngxMasonryItem>\\n            </ngx-masonry>\\n\\n          </div>\\n        </div>\\n      </div>\\n    </div> <!-- /.col -->\\n  </div> <!-- /.row -->\\n\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-lg-12 col-md-6 col-sm-3\\\">\\n      <button type=\\\"submit\\\" class=\\\"btn btn-rounded-5x btn-primary-bordered\\\" (click)=\\\"onSubmit()\\\">Upload and Save\\n        Changes</button>\\n    </div>\\n  </div>\\n\\n</form>\\n\\n\\n<swal #successSwal [options]=\\\"{title : 'Success!',type : 'success', toast: false,position: 'center', background: '#fff', showCancelButton: false, showConfirmButton: false, timer: 2000}\\\">\\n</swal>\\n\\n<swal #deleteSwal [options]=\\\"{ width: '40%',title :'Are you sure?' ,type: 'error' ,showCancelButton: true,  showConfirmButton: true, background: '#fff', cancelButtonColor: '#aaa',confirmButtonText: 'Yes, delete!',  confirmButtonColor: '#EC3A35'}\\\">\\n</swal>\\n\"","import { Component, DoCheck, OnChanges, SimpleChanges, Input, ChangeDetectorRef, AfterViewChecked, ChangeDetectionStrategy, OnInit, ViewChild, AfterViewInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { NgxMasonryOptions, NgxMasonryComponent } from 'ngx-masonry';\nimport { BehaviorSubject } from 'rxjs';\nimport { setStyles } from '@angular/animations/browser/src/util';\nimport { PhotoService } from '../../services/photos/photos.service';\nimport { timeout, debounce, debounceTime } from 'rxjs/operators';\nimport { NgxSpinnerService } from 'ngx-spinner';\nimport { SwalComponent } from '@toverux/ngx-sweetalert2';\nimport { AlbumService } from '../../services/album/album.service';\n\n\n\n@Component({\n    selector: 'admin-photos-component',\n    templateUrl: './admin-photos.component.html',\n    styles: [\n        `\n         .imagesize {width: 200px; height:150px;}\n         .lg-trigger:hover {cursor: pointer}\n         .btn {float:right}\n       `\n    ]\n})\n\nexport class AdminPhotosComponent implements OnInit {\n\n    @ViewChild('successSwal') private successSwal: SwalComponent;\n    @ViewChild('deleteSwal') private deleteSwal: SwalComponent;\n\n    public myOptions: NgxMasonryOptions;\n    public photoForm: FormGroup;\n    public photosToUpload = [];\n    public photosToDisplay = [];\n    public photosFromAlbum = [];\n    public albumItems: string[];\n\n    private awsbucket = 'https://s3-us-west-1.amazonaws.com/kevintestbucket12345/';\n\n\n    constructor(private formBuilder: FormBuilder, private photoService: PhotoService, private cd: ChangeDetectorRef, private spinner: NgxSpinnerService, private albumService: AlbumService) {\n        this.buildForm();\n        this.myOptions = {\n            columnWidth: 2,\n            itemSelector: '.isotope-item',\n            gutter: 2, \n            transitionDuration: '0.6s'\n        }\n\n    }\n\n\n\n\n\n    /* function is part of the life-cyle hook that retrieves all album tags. first selected item in drop down component calls the getPhotos() method\n    */\n    ngOnInit() {\n        this.cd.markForCheck();\n        this.photoService.GetAlbums().subscribe((res: any) => {\n            this.albumItems = res;\n            this.photoForm.patchValue({ albumName: this.albumItems[0] })\n            this.getPhotos(this.photoForm.value.albumName);\n        })\n    }\n\n\n\n\n\n\n\n    /* function that retrieves photos from an album\n        *@event is an input, returned by an event emmiter from the dropdown component to determine selection. if null/undefined, there are no photos to show\n    */\n    public getPhotos(event: any) {\n        this.spinner.show();\n        if (!event) {\n            this.photosFromAlbum = null;\n        } else {\n            this.photoService.GetPhotosByAlbum(event.albumName).subscribe((res: any) => {\n                this.photosFromAlbum = null;\n                this.photosFromAlbum = res.items\n                this.cd.markForCheck();\n                setTimeout(()=>{this.spinner.hide();},2000);\n            })\n        }\n    }\n\n\n\n\n    private refreshPage(): void {\n        this.photoForm.controls.image.reset();\n        this.getPhotos({ albumName: this.photoForm.value.albumName });\n    }\n\n\n\n\n    /* function that constructs the form controls\n    */\n    private buildForm(): void {\n        this.photoForm = this.formBuilder.group({\n            albumName: this.formBuilder.control(null, [Validators.required, Validators.min(1)]),\n            image: this.formBuilder.control(null, Validators.required),\n        });\n    }\n\n\n\n\n    /* function to retrieve file from the upload input\n        *@e is the event emitted by the upload component. The return is a data File object.\n    */\n    public getFile(e: any): void {\n        this.photosToUpload.push(e.file);\n        this.photosToDisplay.push(e.src);\n        this.photoForm.controls.image.reset();\n    }\n\n\n\n\n    /* function that removes and resets all the files to upload and to display from the page. \n    */\n    private resetFiles(): void {\n        this.photosToUpload = [];\n        this.photosToDisplay = [];\n    }\n\n\n\n\n    /* function to either delete phot from preview section or from album\n        *@id is the associated id\n        *@imageKey is to determine if a key exixts, if it doesn't is is part of the preview section\n    */\n    private onDelete(id?: any, imageKey?: any) {\n        //remove photo from preview section\n        if (imageKey === undefined) {\n            setTimeout(() => {this.photosToDisplay.splice(id, 1); this.photosToUpload.splice(id,1)}, 200);\n        } else {\n            //remove photo from current this.photosToUpload and photosToDisplay\n            this.deleteSwal.show().then(res => {\n                if (res.value) {\n                    this.photoService.Delete(id, imageKey).subscribe(res => {\n                        this.albumService.UpdateCount(this.photoForm.value.albumName);\n                        this.refreshPage();\n                    })\n                }\n            })\n        }\n    }\n\n\n\n\n\n    /* function to upload photos to album and resets the image controls for the form\n    */\n    public onSubmit() {\n        this.photoForm.patchValue({ image: this.photosToUpload })\n        if (this.photosToUpload.length !== 0) {\n            this.spinner.show();\n            this.photoService.Post(this.photoForm.value).subscribe(res => {\n                this.albumService.UpdateCount(this.photoForm.value.albumName);\n                this.refreshPage();\n                this.resetFiles();\n                setTimeout(()=>{this.spinner.hide();},2000);\n            })\n        }\n    }\n\n\n}","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { IAlbum } from './album.entity';\n\n\nimport { Api } from '../../../shared/services/api/api';\nimport { Observable, forkJoin } from 'rxjs';\nimport { take, map, switchMap, tap, switchMapTo } from 'rxjs/operators';\nimport { S3Service } from 'src/app/shared/services/api/s3/s3.service';\nimport { PhotoService } from '../photos/photos.service';\nimport { IPhoto } from '../photos/photos.entity';\n\n\nclass DeleteItems {\n    keys: string[];\n    ids: string[];\n}\n\n@Injectable({ providedIn: 'root' })\nexport class AlbumService extends Api<IAlbum>{\n    private apiRoute = 'albums';\n\n    private albums: IAlbum[];\n    private album: IAlbum;\n    private imgKey: string;\n\n\n    constructor(protected http: HttpClient, private s3: S3Service, private photoService: PhotoService) {\n        super(http);\n    }\n\n\n    /* function that retrieves items from the server.\n    */\n    public GetAll() {\n        return this.api(this.apiRoute, 'GET')\n    }\n\n\n    /* function that retrieves an item by id from the server.\n    */\n    public GetById(id: string) {\n        return this.api(`${this.apiRoute}/${id}`, 'GET')\n    }\n\n\n    /* function that posts image to aws s3 bucket, return token is then added to payload before sending to the server.\n           *@data payload sent to server\n           *@image file to be uploaded to aws s3 bucket\n    */\n    public Post(data: IAlbum, image: File) {\n        data.tag = data.tag.trim();\n        data.name = data.name.trim();\n        data.total = 0;\n        return this.s3.Upload(image).pipe(\n            map((res: any) => data.image = res.key),\n            switchMap(res => res && this.api(this.apiRoute, 'POST', data))\n        )\n    }\n\n\n    /* function that posts image to aws s3 bucket, return token is then added to payload before sending to the server.\n           *@data payload sent to server\n           *@image file to be uploaded to aws s3 bucket\n           *id is the required id to target an item in the collection\n    */\n    public Update(data: IAlbum, id: string, image: any) {\n        data.tag = data.tag.trim();\n        data.name = data.name.trim();\n        \n        return this.GetById(id).pipe(map( (res:any) => {\n            this.imgKey = res.item.image;\n\n            //update if album names are different, if they are, update all photos with new album name.\n            if(typeof data.image === 'string' && res.item.name !== data.name){\n                let newName = data.name;\n                let oldName = res.item.name\n                let calls = [];\n                this.photoService.GetPhotosByAlbum(oldName).subscribe((res:any) => {\n                    for(let i = 0, n = res.items.length; i < n; i++){\n                        let obj : IPhoto = {\n                            albumName: newName,\n                            image: res.items[i].image\n                        };\n                        calls.push(this.photoService.Update(res.items[i]._id, obj).subscribe())\n                    }\n                    calls.push(this.api(`${this.apiRoute}/${id}`, 'PUT', data).subscribe()); //update album at the end.\n                    forkJoin(calls);\n                })\n            //update only if album image hasn't changed.\n            } else if (typeof data.image === 'string') {\n                \n                return this.api(`${this.apiRoute}/${id}`, 'PUT', data).subscribe()\n\n            } else {\n            //update if new album image uploaded.\n                return this.s3.DeleteMedia([this.imgKey]).subscribe(res => {\n                    this.s3.Upload(image).subscribe((res:any) => {\n                        data.image = res.key;\n                        this.api(`${this.apiRoute}/${id}`, 'PUT', data).subscribe()\n                    })\n                })\n            }\n        }))\n    }\n\n\n    public UpdateCount(albumName:any){\n        return this.photoService.GetPhotosByAlbum(albumName).subscribe(async (res:any) =>{\n            let albumInfo: IAlbum;\n            let count = res.items.length;\n            return this.GetAll().subscribe(async (res:any) =>{\n                albumInfo = await res.items.filter(itm => itm.name === albumName);\n                albumInfo[0].total = count;\n                return this.api(`${this.apiRoute}/${albumInfo[0]._id}`, 'PUT', albumInfo[0]).subscribe();\n            })\n        })\n    }\n\n\n    /* function that deletes target image from aws s3 and deletes album from server, in that order.\n           *@id takes in the id of the album for parsing\n    */\n    public Delete(id: string) {\n        let photosToDelete = new DeleteItems();\n        let photosToDeleteCall = [];\n\n        //grab album info\n        return this.GetById(id).subscribe((res: any) => {\n            this.album = res.item;\n            //get all photos by album, get them ready for deletion in aws s3.\n            this.photoService.GetPhotosByAlbum(this.album.name).subscribe((res: any) => {\n                \n                for (let i = 0, n = res.items.length; i < n; i++) {\n                    //collect forkjoin calls\n                    photosToDeleteCall.push(this.photoService.Delete(res.items[i]._id, res.items[i].image));\n                }\n                //delete album from server\n                this.api(`${this.apiRoute}/${id}`, 'DELETE').subscribe((res: any) => {\n                    \n                })\n\n                //delete album photo from aws s3\n                this.s3.DeleteMedia([this.album.image]).subscribe(res => {})\n                forkJoin(photosToDeleteCall).subscribe(res => {})\n            })\n        })\n    }\n\n\n\n}","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { IPhoto } from './photos.entity';\n\n\nimport { Api } from '../../../shared/services/api/api';\nimport { Observable, forkJoin, of } from 'rxjs';\nimport { take, map, switchMap, tap } from 'rxjs/operators';\nimport { S3Service } from 'src/app/shared/services/api/s3/s3.service';\n\n@Injectable({ providedIn: 'root' })\n\nexport class PhotoService extends Api<IPhoto>{\n\n    private albums: any[];\n\n    constructor(protected http: HttpClient, private s3: S3Service) {\n        super(http);\n    }\n\n    public bucketURL = 'https://s3-us-west-1.amazonaws.com/kevintestbucket12345/';\n\n    /* function that retrieves items from the server.\n    */\n    public GetAlbums() {\n        return this.api('albums', 'GET')\n        .pipe( map((res: any) => {\n                let out = [];\n                this.albums = res.items;\n                for (let i = 0, n = this.albums.length; i < n; i++) {\n                    out.push(this.albums[i].name);\n                }\n                return out;\n        }))\n    }\n\n    public GetPhotos() {\n        return this.api('photos', 'GET')\n    }\n\n    /* function that retrieves an item by id from the server.\n    */\n    public GetPhotosByAlbum(album: string) { \n        return this.api(`photos/${album}`, 'GET')\n    }\n\n\n    /* function that posts image to aws s3 bucket, return token is then added to payload before sending to the server. Utilizing forkJoin for multiple http calls\n           *@form payload sent to server with properties albumName and image. image is an array of files to be uploaded to aws s3 and server\n    */\n    public Post(form: IPhoto|any) {\n        const calls = []\n        form.image.forEach(element => {\n            calls.push(this.s3.Upload(element).pipe(map((res:any) => {\n                let obj:any = {image : res.key, albumName : form.albumName};\n                return this.api('photos', 'POST', obj).subscribe()\n            })))\n        });\n        return forkJoin(calls)\n    }\n\n\n\n    public Update(id:string, payload: IPhoto){\n        return this.api(`photos/${id}`, 'PUT', payload);\n    }\n\n    /* function that deletes target image from aws s3 and deletes album from server, in that order.\n           *@id takes in the id of the album for parsing\n    */\n    public Delete(id: string, imageKey: string) {\n        const calls = [this.s3.DeleteMedia([imageKey]), this.api(`photos/${id}`, 'DELETE')]\n        return forkJoin(calls)\n    }\n\n\n\n}","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { ITag } from './tags.entity';\n\n\nimport { Api } from '../../../shared/services/api/api';\nimport { Observable, forkJoin, of } from 'rxjs';\nimport { take, map, switchMap, tap } from 'rxjs/operators';\nimport { S3Service } from 'src/app/shared/services/api/s3/s3.service';\nimport { formArrayNameProvider } from '@angular/forms/src/directives/reactive_directives/form_group_name';\n\n@Injectable({ providedIn: 'root' })\n\nexport class TagService extends Api<ITag>{\n\n    private tags: any[];\n\n    constructor(protected http: HttpClient) {\n        super(http);\n    }\n\n\n    /* function that retrieves items from the server.\n    */\n    public GetTags() {\n        return this.api('tags', 'GET')\n    }\n\n    /* function that retrieves an item by id from the server.\n    */\n    public GetTagById(id: string) { \n        return this.api(`tags/${id}`, 'GET')\n    }\n\n    /* function that posts/saves an item by id from the server.\n        *@form represents the payload type \n    */\n    public Post(form:ITag){\n        form.tagName = form.tagName.trim();\n        return this.api('tags', 'POST', form)\n    }\n   \n    /* function that updates an item by id from the server.\n        *@payload represents the payload type\n        *@id is the id of the item\n    */\n    public Update(id:string, payload: ITag){\n        payload.tagName = payload.tagName.trim();\n        return this.api(`tags/${id}`, 'PUT', payload);\n    }\n\n    /* function that deletes target from server\n           *@id takes in the id of the selected tag\n    */\n    public Delete(id: string) {\n        return this.api(`tags/${id}`, 'DELETE')\n    }\n\n\n\n}","module.exports = \"<!-- Begin page preloader -->\\n<div id=\\\"preloader\\\">\\n    <div class=\\\"pulse bg-main\\\"></div>\\n</div>\\n\\n<ngx-spinner bdColor=\\\"rgba(20, 20, 20, 0.8)\\\" size=\\\"large\\\" color=\\\"#fff\\\" type=\\\"line-scale\\\"></ngx-spinner>\\n<!-- Header/Navigation -->\\n<!-- \\n* Use class \\\"show-hide-on-scroll\\\" to hide header on scroll down and show on scroll up.\\n* Use class \\\"fixed-top\\\" to set header to fixed position.\\n-->\\n<header id=\\\"header\\\" class=\\\"fixed-top\\\" header-component></header>\\n\\n<!-- Body Content -->\\n<div id=\\\"body-content\\\">\\n    \\n    <!-- Load Views with App router-->\\n    <router-outlet></router-outlet>\\n\\n    <!-- Footer -->\\n    <footer id=\\\"footer\\\" footer-component></footer>\\n      \\n</div>\\n\"","import { Component, ViewEncapsulation } from '@angular/core';\n\n@Component({\n  selector: '[app-root]',\n  templateUrl: './app.component.html',\n  encapsulation: ViewEncapsulation.None\n})\nexport class AppComponent {\n  title = 'public';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule, enableProdMode } from '@angular/core';\nimport {ReactiveFormsModule, FormsModule} from '@angular/forms';\nimport { NgxMasonryModule } from 'ngx-masonry';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { GalleryModule } from  '@ngx-gallery/core';\nimport { LightboxModule } from  '@ngx-gallery/lightbox';\nimport { NgSelectModule } from '@ng-select/ng-select';\nimport { HttpClientModule, HTTP_INTERCEPTORS} from '@angular/common/http';\nimport { NgxSpinnerModule } from 'ngx-spinner'; \nimport { SweetAlert2Module } from '@toverux/ngx-sweetalert2';\nimport { NgMasonryGridModule } from 'ng-masonry-grid';\n\n\n\nimport { AppComponent } from './app.component';\nimport { AppRoutingModule } from './core/app-routing';\n\n//directives\nimport {SubmitFormIfValidDirective} from './shared/directives/form-validation';\n\n//views \nimport {HomeComponent} from './home/home.component';\nimport {PortfolioComponent} from './portfolio/portfolio.component';\nimport {LoginComponent} from './core/login/login.component';\nimport {AdminComponent} from './admin/admin.component';\n\n\n//services\nimport {AlbumService} from './admin/services/album/album.service';\nimport {S3Service} from './shared/services/api/s3/s3.service';\nimport { PortfolioAlbumService } from './portfolio/services/portfolio-album.service';\nimport { PortfolioPhotoService } from './portfolio/services/portfolio-photos.service';\nimport { TagService } from './admin/services/tags/tags.service';\n\n\n\n//components\nimport {FooterComponent} from './core/footer/footer';\nimport {HeaderComponent} from './core/header/header';\nimport {IntroImageComponent} from './home/components/intro-image/intro-image.component';\nimport {IntroCaptionComponent} from './home/components/intro-caption/intro-caption.component';\nimport {HeaderImageComponent} from './shared/components/header-image/header-image.component';\nimport {AlbumHeaderComponent} from './shared/components/album-header/album-header.component';\nimport {MasonryAlbumComponent} from './portfolio/components/masonry-album/masonry-album.component';\nimport {GridPhotosComponent} from './portfolio/components/grid-photos/grid-photos.component';\nimport {AdminAlbumComponent} from './admin/components/album/admin-album.component';\nimport {AdminPhotosComponent} from './admin/components/photos/admin-photos.component';\nimport { AdminManageTagComponent } from './admin/components/managetag/admin-managetag.component';\nimport {InputComponent} from './shared/components/form/input';\nimport {TextAreaComponent} from './shared/components/form/textarea';\nimport {DropDownComponent} from './shared/components/form/dropdown';\nimport {UploadComponent} from './shared/components/upload/upload.component';\nimport { CheckboxComponent } from './shared/components/form/checkbox';\nimport { _401Component } from './core/redirects/401.component';\nimport { _404Component } from './core/redirects/404.component';\n\n\n//pipes\nimport { FilterByTagPipe } from './shared/pipes/filter';\n\n\n//providers\nimport { AuthInterceptor } from './core/helpers/auth.interceptor';\nimport { AuthGuard } from './core/guards/auth.guard';\n\n\n//enable production mode;\nenableProdMode();\n\n\n@NgModule({\n  declarations: [ \n    AppComponent,\n    HomeComponent,\n    PortfolioComponent,\n    LoginComponent,\n    AdminComponent,\n    FooterComponent,\n    HeaderComponent,\n    IntroImageComponent,\n    IntroCaptionComponent,\n    HeaderImageComponent,\n    AlbumHeaderComponent,\n    MasonryAlbumComponent,\n    GridPhotosComponent,\n    AdminAlbumComponent,\n    AdminPhotosComponent,\n    AdminManageTagComponent,\n    _401Component,\n    _404Component,\n    InputComponent,\n    TextAreaComponent,\n    DropDownComponent,\n    CheckboxComponent,\n    UploadComponent,\n    SubmitFormIfValidDirective,\n    FilterByTagPipe\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    ReactiveFormsModule,\n    FormsModule,\n    NgSelectModule,\n    NgxMasonryModule,\n    NgMasonryGridModule,\n    BrowserAnimationsModule,\n    HttpClientModule,\n    NgxSpinnerModule,\n    GalleryModule.forRoot(),\n    SweetAlert2Module.forRoot(),\n    LightboxModule.forRoot({panelClass: 'fullscreen'})\n  ],\n  providers: [\n    AlbumService, \n    S3Service, \n    TagService, \n    PortfolioAlbumService, \n    PortfolioPhotoService, \n    AuthInterceptor, \n    AuthGuard, \n    {provide: HTTP_INTERCEPTORS, useClass: AuthInterceptor, multi: true}],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { NgModule } from '@angular/core';\nimport {RouterModule, Routes} from \"@angular/router\";\nimport {HomeComponent} from '../home/home.component';\nimport {PortfolioComponent} from '../portfolio/portfolio.component';\nimport {GridPhotosComponent} from '../portfolio/components/grid-photos/grid-photos.component';\nimport {LoginComponent} from '../core/login/login.component';\nimport {AdminComponent} from '../admin/admin.component';\nimport { _401Component } from './redirects/401.component';\nimport { _404Component } from './redirects/404.component';\nimport { AuthGuard } from '../core/guards/auth.guard';\n\n\nconst ROUTES : Routes = [\n    {path : '', redirectTo: 'login', pathMatch : 'full'}, \n    {path: 'login', component : LoginComponent},\n    {path: 'home', component: HomeComponent, canActivate: [AuthGuard]},\n    {path: 'portfolio', component: PortfolioComponent, canActivate: [AuthGuard]},\n    {path: 'portfolio/:id', component: GridPhotosComponent, canActivate: [AuthGuard]},\n    {path: 'dashboard', component : AdminComponent, canActivate: [AuthGuard]},\n    {path: 'error', component: _401Component},    \n    {path : '**', component: _404Component},\n]\n\n@NgModule({\n    exports: [RouterModule],\n    imports : [RouterModule.forRoot(ROUTES)]\n})\n\nexport class AppRoutingModule {}","module.exports = \"<div *ngIf= \\\"authService.isLoggedIn()\\\" class=\\\"footer-inner\\\">\\n  <div class=\\\"container-fluid\\\">\\n    <div class=\\\"row\\\">\\n\\n      <div class=\\\"col-sm-6\\\">\\n        <div class=\\\"copyright\\\">\\n          &copy; Untitled | Demo Photos : <a target=\\\"_blank\\\" href=\\\"https://unsplash.com/\\\">Unsplash</a> | Website: <a target=\\\"_blank\\\" href=\\\"http://www.kevinkj.com/\\\">Here</a>\\n        </div>\\n      </div> <!-- /.col -->\\n\\n      <div class=\\\"col-sm-6\\\">\\n        <div class=\\\"social-icons\\\">\\n          <ul>\\n            <li><a target=\\\"_blank\\\" href=\\\"https://github.com/kevin226j\\\" title=\\\"Check me out on GitHub\\\"><i\\n                  class=\\\"fab fa-github\\\"></i></a></li>\\n          </ul>\\n        </div>\\n      </div> <!-- /.col -->\\n\\n    </div> <!-- /.row -->\\n  </div> <!-- /.container -->\\n</div> <!-- /.footer-inner -->\\n\"","import { Component, ViewEncapsulation } from '@angular/core';\nimport { AuthService } from 'src/app/shared/services/api/auth.service';\n\n@Component({\n    selector: '[footer-component]',\n    templateUrl: './footer.html',\n    styles: [`\n    .body-content {\n        padding:10px;\n        padding-bottom:60px;   /* Height of the footer */\n     }\n     .footer {\n        position:absolute;\n        bottom:0;\n        width:100%;\n        height:60px;   /* Height of the footer */\n        background:#6cf;\n     },\n     .footer-inner {\n        padding-top: 30px !important;\n        padding-bottom: 30px !important;\n     }\n    `],\n    encapsulation: ViewEncapsulation.None\n})\n\nexport class FooterComponent{\n    constructor(public authService: AuthService) { }\n}","import { Injectable } from \"@angular/core\";\nimport { CanActivate, Router, ActivatedRouteSnapshot, RouterStateSnapshot } from \"@angular/router\";\n\n\n@Injectable({ providedIn: 'root' })\n\nexport class AuthGuard implements CanActivate {\n    constructor(private router: Router) { }\n\n    canActivate(next: ActivatedRouteSnapshot, state: RouterStateSnapshot) {\n        if (localStorage.getItem('id_token')) {\n\n            //logged in so return true\n            return true\n        } else {\n            // this.router.navigate(['/login'])\n            window.location.href = 'login';\n            return false;\n        }\n    }\n}","module.exports = \"<div *ngIf = \\\"authService.isLoggedIn()\\\" class=\\\"header-inner\\\" (window:resize)=\\\"onResize($event)\\\">\\n  <!-- Begin logo -->\\n  <div id=\\\"logo\\\">\\n    <a href=\\\"#\\\" class=\\\"logo-dark\\\"><img src=\\\"assets/img/logo1.png\\\" alt=\\\"logo\\\"></a>\\n  </div>\\n  <!-- End logo -->\\n  <nav class=\\\"navbar navbar-border-bottom\\\">\\n    <div class=\\\"navbar-inner\\\">\\n\\n      <!-- Toggle for better mobile display -->\\n      <div  class=\\\"navbar-header\\\">\\n        <button type=\\\"button\\\" class=\\\"navbar-toggle collapsed\\\" (click)=\\\"toggleState()\\\"\\n          aria-expanded=\\\"false\\\">\\n          <span class=\\\"sr-only\\\">Toggle navigation</span>\\n          <span class=\\\"icon-bar\\\"></span>\\n          <span class=\\\"icon-bar\\\"></span>\\n          <span class=\\\"icon-bar\\\"></span>\\n        </button>\\n      </div> <!-- /.navbar-header -->\\n\\n      <!-- Collect the nav links, forms, and other content for toggling -->\\n      <div class=\\\"collapse navbar-collapse select-tag-item\\\" id=\\\"navbar-collapse-1\\\" [ngClass]=\\\"{ 'in': isIn }\\\">\\n        <ul class=\\\"nav navbar-nav navbar-right\\\">\\n \\n          <!-- HOME -->\\n          <li class=\\\"dropdown dropdown-hover\\\" [ngClass]='{active : href.includes(\\\"/home\\\") || !href}'>\\n            <a href=\\\"/home\\\" class=\\\"dropdown-toggle\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"false\\\">Home</a>\\n          </li>\\n\\n          <!-- PORTFOLIO -->\\n          <li class=\\\"dropdown dropdown-hover\\\" [ngClass]='{active : href.includes(\\\"portfolio\\\")}'>\\n            <a href=\\\"/portfolio\\\" class=\\\"dropdown-toggle\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"false\\\">Portfolio <span *ngIf=\\\"portfolioCategory && !href.includes('portfolio') && innerWidth > 750\\\"\\n                class=\\\"caret-2\\\"><i class=\\\"fas fa-chevron-down\\\"></i></span></a>\\n            <ul *ngIf = \\\"!href.includes('portfolio')\\\" class=\\\"dropdown-menu\\\" (mouseover)= \\\"searchTag($event)\\\">\\n              <li  *ngFor=\\\"let item of portfolioCategory\\\"><a  href = \\\"/portfolio?prefilter={{selectedDropDown}}\\\"> {{item}}</a></li>\\n            </ul>\\n          </li>\\n          <li class=\\\"dropdown dropdown-hover\\\" [ngClass]='{active : href.includes(\\\"/dashboard\\\") || !href}'>\\n            <a href=\\\"/dashboard\\\" class=\\\"dropdown-toggle\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"false\\\">Dashboard</a>\\n          </li>\\n\\n          <li class=\\\"dropdown dropdown-hover\\\">\\n            <a (click)=\\\"logout()\\\" class=\\\"dropdown-toggle\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"false\\\">Logout</a>\\n          </li>\\n\\n        </ul> <!-- /.nav -->\\n      </div> <!-- /.navbar-collapse -->\\n\\n    </div> <!-- /.navbar-inner -->\\n  </nav>\\n  <!-- End menu -->\\n\\n</div> <!-- /.header-inner -->\\n\"","import { Component, ViewEncapsulation, OnInit, OnDestroy, ElementRef, AfterViewInit, NgModule, OnChanges } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { AlbumService } from 'src/app/admin/services/album/album.service';\nimport { AuthService } from 'src/app/shared/services/api/auth.service';\nimport { NgxSpinnerService } from 'ngx-spinner';\n\n@Component({\n    selector: '[header-component]',\n    templateUrl: './header.html',\n    styles: [`a:hover{cursor:pointer}`],\n})\n\nexport class HeaderComponent implements OnInit {\n    public href: string;\n\n    public portfolioCategory = [];\n\n    private selectedDropDown: any;\n\n    public innerWidth: any;\n\n    isIn: boolean = false;   // store state\n\n    constructor(private router: Router, private albumService: AlbumService, private elementRef: ElementRef, private route: ActivatedRoute, public authService: AuthService, private spinner: NgxSpinnerService) {\n    }\n\n\n    ngOnInit() {\n        if (this.authService.isLoggedIn()) {\n\n            this.href = window.location.href;\n            this.albumService.GetAll().subscribe((res: any) => {\n                this.containCategory(res.items);\n            })\n            this.selectedDropDown = '';\n            this.innerWidth = window.innerWidth;\n        }\n    }\n\n    public onResize(event) {\n        this.innerWidth = event.target.innerWidth;\n    }\n\n\n\n    private containCategory(items: any[]) {\n\n        let set = {}//TODO: MAKE SURE TO REMOVE ANY DUPLICATES\n        for (let i = 0, n = items.length; i < n; i++) {\n            if (!set[items[i].tag]) {\n                switch (items[i].category) {\n                    case 'Portfolio':\n                        this.portfolioCategory.push(items[i].tag);\n                }\n                set[items[i].tag] = true;\n            }\n        }\n    }\n\n    //mouse over event.\n    public searchTag(event) {\n        this.selectedDropDown = event.target.text.trim();\n    }\n\n\n    toggleState() { // click handler\n        let bool = this.isIn;\n        this.isIn = bool === false ? true : false;\n    }\n\n    public logout() {\n        this.spinner.show();\n        this.authService.logout();\n        setTimeout(() => {\n            this.spinner.hide();\n            window.location.href = 'login';\n        }, 1000)\n    }\n}","import { Injectable } from \"@angular/core\";\nimport { HttpInterceptor, HttpRequest, HttpHandler, HttpEvent } from \"@angular/common/http\";\nimport { Observable } from \"rxjs\";\n\n@Injectable()\n\nexport class AuthInterceptor implements HttpInterceptor{\n    intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>>{\n        const token = localStorage.getItem(\"id_token\");\n        if(token){\n            const cloned = req.clone({\n                setHeaders : {\n                    Authorization : `Bearer ${token}`\n                }\n            })\n            \n            return next.handle(cloned);\n\n        } else {\n\n            return next.handle(req);\n\n        }\n    }\n}\n\n","module.exports = \"<!-- <section id=\\\"page-header-secion\\\" class=\\\"alter-heading\\\" >\\n</section> -->\\n\\n<section id=\\\"content-section align-center\\\" class=\\\"page\\\" style=\\\"padding-top: 10%;\\\">\\n\\n  <div class=\\\"container\\\">\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-md-4 col-md-push-4\\\">\\n\\n        <!-- Begin content wrap -->\\n        <div class=\\\"content-wrap\\\">\\n          <div class=\\\"row\\\">\\n\\n            <!-- Left column -->\\n            <div class=\\\"col-lg-12 col-md-12 margin-bottom-30\\\">\\n\\n              <!-- Begin tabs -->\\n              <div class=\\\"tabs-wrap\\\">\\n\\n                <div class=\\\"login-wrapper margin-top-50\\\">\\n                  <h4><i class=\\\"fas fa-users\\\"></i> Login</h4>\\n                  <p style=\\\"font-size:9px;\\\">Username: user@demo.com | Password: demo </p> \\n\\n                  <!-- Begin login form -->\\n                  <form id=\\\"login-form\\\" class=\\\"margin-top-40\\\">\\n\\n                      <input-component [type]=\\\"'email'\\\" [control]=\\\"loginForm.controls['username']\\\" [placeholder]=\\\"'Enter Username *'\\\"></input-component>\\n\\n                      <input-component [type]=\\\"'password'\\\" [control]=\\\"loginForm.controls['password']\\\" [placeholder]=\\\"'Enter Password *'\\\"></input-component>\\n\\n                    <button type=\\\"submit\\\" class=\\\"btn btn-primary btn-rounded-5x btn-block margin-top-40\\\" [tsSubmitIfValid]=\\\"loginForm\\\" (valid)=\\\"login()\\\" >Login</button>\\n                  </form>\\n                  <!-- End login form -->\\n\\n                </div> <!-- /.login-wrapper -->\\n              </div>\\n              <!-- End tabs -->\\n            </div> <!-- /.col -->\\n          </div> <!-- /.row -->\\n        </div>\\n        <!-- End content wrap -->\\n\\n      </div> <!-- /.col -->\\n    </div> <!-- /.row -->\\n  </div> <!-- /.container -->\\n</section>\\n<!-- End content section -->\\n\"","import {Component, OnInit} from '@angular/core';\nimport { FormGroup, FormBuilder, Validators, EmailValidator } from '@angular/forms';\nimport { AuthService } from 'src/app/shared/services/api/auth.service';\nimport { Router } from '@angular/router';\nimport { map } from 'rxjs/operators';\nimport { NgxSpinnerService } from 'ngx-spinner';\n\n@Component({\n    selector :'login-component',\n    templateUrl: './login.component.html'\n})\n\nexport class LoginComponent implements OnInit{\n    public loginForm: FormGroup;\n\n    constructor(private formBuilder: FormBuilder, public authService: AuthService,private router: Router, private spinner: NgxSpinnerService) {\n        this.buildForm(); \n    }\n\n    private buildForm(){\n        this.loginForm = this.formBuilder.group({\n            username: this.formBuilder.control(null, [Validators.required, Validators.email]),\n            password: this.formBuilder.control(null, [Validators.required, Validators.min(8)])\n        })\n    }\n\n    public ngOnInit() {\n        if(this.authService.isLoggedIn() === true){\n            this.router.navigateByUrl('/home');\n        }\n    }\n\n    public login() {\n        const {username, password} = this.loginForm.value;\n        this.spinner.show();\n        this.authService.login(username, password).subscribe((res:any)=> {\n                this.spinner.hide();\n                (res === false) ? this.router.navigateByUrl('/error') : window.location.href = 'home';\n        })\n\n    }\n}","import { Component } from \"@angular/core\";\nimport { style } from \"@angular/animations\";\n\n@Component({\n    template: `\n        <section id=\"page-header-secion\" class=\"alter-heading error\" >\n        </section>\n        <section id=\"content-section\" class=\"page page-404 full-page bg-image\" style=\"background-image: url(); background-position: 50% 50%; height: 557px;\">\n        <div class=\"cover bg-transparent-7-dark\"></div>        \n        <div class=\"content-wrap align-center text-center padding-60\">\n            <h1>401 Error.</h1>\n            <h5>Unauthorized access</h5>\n        <a href=\"/\" class=\"btn btn-primary btn-rounded-5x btn-block margin-top-35\">Back to home</a>\n        </div>\n    <!-- End content wrap -->\n\n</section>\n    `\n    ,styles: [`\n        .error{ width: 100%; background-color: rgba(0, 0, 0, 0.7); color: rgba(0, 0, 0, 0.7) }\n    `]\n})\n\nexport class _401Component {\n    constructor(){\n    }\n}","import { Component } from \"@angular/core\";\nimport { style } from \"@angular/animations\";\n\n@Component({\n    template: `\n        <section id=\"page-header-secion\" class=\"alter-heading error\" >\n        </section>\n        <section id=\"content-section\" class=\"page page-404 full-page bg-image\" style=\"background-image: url(); background-position: 50% 50%; height: 557px;\">\n        <div class=\"cover bg-transparent-7-dark\"></div>        \n        <div class=\"content-wrap align-center text-center padding-60\">\n            <h1>404 Error.</h1>\n            <h5>Page Not Found</h5>\n        <a href=\"/\" class=\"btn btn-primary btn-rounded-5x btn-block margin-top-35\">Back to home</a>\n        </div>\n    <!-- End content wrap -->\n\n</section>\n    `\n    ,styles: [`\n        .error{ width: 100%; background-color: rgba(0, 0, 0, 0.7); color: rgba(0, 0, 0, 0.7) }\n    `]\n})\n\nexport class _404Component {\n    constructor(){}\n}","import {Component, ViewEncapsulation} from '@angular/core';\n\n@Component({\n    selector: '[intro-caption-component]',\n    template: `\n\n            <h1 class=\"intro-title\"> {{title}} </h1>\n            <p class=\"intro-text hide-from-xs\"> {{caption}} </p>\n            <div class=\"intro-button-wrap\">\n            <a href=\"/portfolio\" class=\"btn btn-default btn-rounded-5x\">View Albums</a>\n            <a href=\"/dashboard\" class=\"btn btn-default btn-rounded-5x\">Create An Album</a>\n            </div>\n        \n    `,\n    encapsulation : ViewEncapsulation.None\n})\n\nexport class IntroCaptionComponent {\n    title : string;\n    caption: string;\n\n    constructor(){\n        this.title = 'Welcome to the SharePhotos demo!'\n        this.caption = 'Feel free to add an album of your own, and share it with everyone!'\n    }\n\n    \n}","module.exports = \"<!-- \\n    * Use class \\\"bg-image-scroll-horizontal\\\" or \\\"bg-image-scroll-vertical\\\" to enable background image scrolling animation (otherwise use class \\\"bg-image\\\" or \\\"bg-image-fixed\\\").\\n    * Use class \\\"full-page\\\" to enable fullscreen intro. \\n-->\\n\\n\\n\\n<!-- Element cover -->\\n<div class=\\\"cover bg-transparent-6-dark\\\"></div>\\n\\n\\n<!-- * Use classes \\\"align-center\\\" and \\\"text-center\\\" to align caption to the center.-->\\n<div intro-caption-component class=\\\"intro-caption bg-transparent-8-dark text-gray-3 align-center text-center\\\"></div>\\n<!-- End intro caption -->\\n\"","import {Component, ViewEncapsulation} from '@angular/core';\n\n@Component({\n    selector: '[intro-image-component]',\n    templateUrl: './intro-image.component.html',\n    encapsulation: ViewEncapsulation.None\n})\n\nexport class IntroImageComponent{\n    constructor(){}\n}","module.exports = \"<!-- \\n    TODO: Logic to swap between video or image mode for intro section\\n-->\\n<!-- Start intro section -->\\n<section intro-image-component\\nid=\\\"intro-section\\\" class=\\\"full-page bg-image-scroll-vertical\\\" style=\\\"background-image: url('https://images.unsplash.com/photo-1520390138845-fd2d229dd553?ixlib=rb-0.3.5&ixid=eyJhcHBfaWQiOjEyMDd9&s=8d40e38088f9896824b508783a220bec&auto=format&fit=crop&w=1789&q=80'); background-position: 50% 50%;\\\"></section>\\n\\n\\n<!-- End intro section -->\\n\"","import { Component, OnInit, ViewEncapsulation } from '@angular/core';\n \n@Component({\n  selector: 'home-component',\n  templateUrl : './home.component.html',\n  styles:[`#body {height: 90vh;}`],\n  encapsulation: ViewEncapsulation.None\n})\nexport class HomeComponent implements OnInit {\n  constructor() {}\n  ngOnInit() {}  \n\n}","module.exports = \"<!-- ================================\\n///// Begin page header section /////\\n================================= -->\\n<section id=\\\"page-header-secion\\\" album-header-component [props]=\\\"headerProps\\\">\\n</section>\\n<!-- End page header section -->\\n\\n\\n<section *ngIf = \\\"albumInfo.total == 0\\\" id=\\\"content-section\\\" class=\\\"album-single\\\" style=\\\"padding-bottom: 30%;\\\">\\n\\n</section>\\n\\n<!-- ============================\\n///// Begin content section /////\\n============================= -->\\n<section *ngIf = \\\"albumInfo.total !== 0\\\" id=\\\"content-section\\\" class=\\\"album-single\\\" style=\\\"padding-bottom: 5%;\\\">\\n  <div class=\\\"container-fluid\\\">\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-md-12\\\">\\n\\n        <!-- Begin content wrap -->\\n        <div class=\\\"content-wrap\\\">\\n          <div class=\\\"isotope gutter-2 col-6\\\">\\n            <!-- Begin isotope items (album single items)\\n            =============================================== \\n            * Use classes \\\"hover-center\\\", \\\"hover-boxed\\\", \\\"hover-dark\\\", \\\"hover-simple\\\" to change album single item hover variations.\\n            * Note1: For grid layout make sure that your images are the same dimensions.\\n            * Note2: For masonry layout make sure that your images are the different dimensions.\\n            -->\\n            <div id=\\\"gallery\\\" class=\\\"isotope-items-wrap lightgallery hover-center  hover-dark\\\">\\n\\n              <!-- Grid sizer (do not remove!!!) -->\\n              <div class=\\\"grid-sizer\\\"></div>\\n              <ng-masonry-grid \\n              [masonryOptions]=\\\"{gutter: 1, columnWidth: 1, transitionDuration: '0.7s'}\\\" \\n              [useAnimation]=\\\"true\\\"\\n              [useImagesLoaded]=\\\"true\\\"\\n              [scrollAnimationOptions]=\\\"{ animationEffect: 'effect-1', minDuration : 0, maxDuration : 0, viewportFactor : 8 }\\\">\\n\\n                <ng-masonry-grid-item id=\\\"{{'masonry-item-'+i}}\\\" class=\\\"isotope-item\\\" *ngFor=\\\"let photo of albumPhotos; let i = index\\\">\\n                  <!-- Begin album single item -->\\n                  <div class = \\\"grid\\\">\\n                  <div class=\\\"grid-item\\\" [lightbox]=\\\"i\\\" [gallery]=\\\"galleryId\\\">\\n                    <div class=\\\"album-single-item\\\">\\n                      <img class=\\\"asi-img\\\" src=\\\"{{baseurl + photo.image}}\\\" alt=\\\"image\\\">\\n                      <!-- Begin item cover -->\\n                      <div class=\\\"asi-cover\\\">    \\n                        <a class=\\\"asi-link lg-trigger\\\" [attr.data-exthumbnail]=\\\"baseurl + photo.image\\\">\\n                          <div class=\\\"asi-info\\\">\\n                            <span class=\\\"s-icon\\\"><i class=\\\"fas fa-search\\\"></i></span>\\n                          </div>\\n                        </a>\\n                      </div>\\n                      <!-- End item cover -->\\n                    </div>\\n                  </div>\\n                </div>\\n                  <!-- End album single item -->\\n\\n                </ng-masonry-grid-item>\\n              </ng-masonry-grid>\\n\\n            </div>\\n            <!-- End isotope items wrap -->\\n\\n          </div>\\n          <!-- End isotope -->\\n\\n        </div>\\n        <!-- End content wrap -->\\n\\n      </div> <!-- /.col -->\\n    </div> <!-- /.row -->\\n\\n  </div> <!-- /.container -->\\n</section>\\n\\n\\n<!-- End content section -->\\n\"","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { NgxMasonryOptions } from 'ngx-masonry';\nimport { Gallery, GalleryItem, ImageItem, GalleryComponent} from '@ngx-gallery/core';\nimport { PortfolioPhotoService } from '../../services/portfolio-photos.service';\nimport { PortfolioAlbumService } from '../../services/portfolio-album.service';\nimport { PhotoService } from 'src/app/admin/services/photos/photos.service';\nimport { IAlbum } from 'src/app/admin/services/album/album.entity';\nimport { IHeaderAlbum } from 'src/app/shared/models/Iheader-album';\n\n\n\n@Component({\n    selector: 'grid-photos-component',\n    templateUrl: './grid-photos.component.html',\n})\n\n\nexport class GridPhotosComponent implements OnInit {\n\n    private galleryId = 'myLightbox';\n    private items: GalleryItem[]; \n    public masonryOptions: NgxMasonryOptions;\n    public albumPhotos : any[];\n    private baseurl = 'https://s3-us-west-1.amazonaws.com/kevintestbucket12345/';\n    public albumInfo : IAlbum;\n    public headerProps : IHeaderAlbum\n    public totalCount: any;\n\n\n    constructor(public gallery: Gallery, private photoService: PhotoService, private portfolioAlbumService: PortfolioAlbumService) {\n        this.masonryOptions = {\n            columnWidth: 2,\n            itemSelector: '.isotope-item',\n            gutter: 1,\n            transitionDuration: '0.7s'\n        }\n        this.items = [];\n        this.headerProps = {\n            title: '',\n            numberOfPhotos: 0,\n            description: '',\n            prevAlbum: ' ',\n            nextAlbum: '',\n            currentCategory:''\n        }\n        this.totalCount = 0;\n    }\n\n\n    ngOnInit() {\n        this.getPhotosByAlbum();\n        this.getAlbumCollection();\n    }\n\n\n    /*Get album collection based on  category. Retrieves album information and associated photos. \n    */\n    private getAlbumCollection() {\n        let category = this.getCategoryFromUrl();\n        let album = this.getAlbumFromUrl();\n\n        this.portfolioAlbumService.getAlbumByName(album,category).subscribe((res:any)=> {\n            this.albumInfo = res.item;\n            \n\n            this.portfolioAlbumService.getAlbums(category).subscribe((res:any) => {\n                let pos = res.items.map((obj:any) => { return obj.name }).indexOf(album)\n                let _nextAlbum = res.items[pos+1];\n                let _prevAlbum = res.items[pos-1];\n                let _currentAlbum = res.items[pos];\n                        \n                this.headerProps = {\n                    title: this.albumInfo.name,\n                    numberOfPhotos: this.albumInfo.total,\n                    description: this.albumInfo.description,\n                    currentCategory: category,\n                    prevAlbum: `${category}/${!_prevAlbum? '' : _prevAlbum.name}`,\n                    nextAlbum: `${category}/${!_nextAlbum? '' : _nextAlbum.name}`,\n                    prevAlbumPhoto: `${this.baseurl}${!_prevAlbum? '' : _prevAlbum.image}`,\n                    nextAlbumPhoto: `${this.baseurl}${!_nextAlbum? '' : _nextAlbum.image}`,\n                }\n\n            });\n\n        });\n        \n    }\n\n\n    /* Function retrieves all photos associated with selected album, located in the url\n    */\n    private getPhotosByAlbum() {\n        const album = this.getAlbumFromUrl();\n        this.photoService.GetPhotosByAlbum(album).subscribe((res:any) => {\n            this.albumPhotos = res.items;\n            this.configureLightBox(res.items);\n        });\n    }\n\n\n    /* function that configures the light box module\n    */\n    private configureLightBox(arr) {\n        \n        const galleryRef = this.gallery.ref(this.galleryId, {\n            loadingStrategy: 'default',\n            imageSize: 'contain',\n            dots: true,\n            disableThumb: true,\n            thumb: false,\n            zoomOut: 0\n        });\n\n        arr.forEach(element => {\n            this.items.push(new ImageItem({ src: this.baseurl+element.image, thumbnail: this.baseurl+element.image }));\n        }) \n        galleryRef.load(this.items);\n\n    }\n\n\n    /* function returns the album name from the decoded url.\n    */\n    private getAlbumFromUrl (){\n        let href = decodeURI(window.location.href);\n        return href.substring(href.lastIndexOf('/') + 1);\n    }\n\n\n    /* function returns the category type from the decoded url.\n    */\n    private getCategoryFromUrl () {\n        let href = decodeURI(window.location.href);\n        let lastNdx = href.lastIndexOf('/');\n        let strtNdx = null;\n        for(let i = lastNdx-1; i >=0; i--){\n            if(href[i] === '/') {\n                strtNdx = i; break;\n            }\n        }\n        return href.substring(strtNdx+1,lastNdx);        \n    }\n\n\n\n\n\n}\n\n\n\n\n\n\n\n//FOR TESTING\n\n    // public albumPhotos = [\n    //     { src: 'assets/img/stock/image1.jpg', thumbnail: 'assets/img/stock/image1.jpg' },\n    //     { src: 'assets/img/stock/image1.jpg', thumbnail: 'assets/img/stock/image1.jpg' },\n    //     { src: 'assets/img/stock/image1.jpg', thumbnail: 'assets/img/stock/image1.jpg' },\n    //     { src: 'assets/img/stock/image1.jpg', thumbnail: 'assets/img/stock/image1.jpg' },\n    //     { src: 'assets/img/stock/image1.jpg', thumbnail: 'assets/img/stock/image1.jpg' },\n    //     { src: 'assets/img/album-single/grid/img-7.jpg', thumbnail: 'assets/img/album-single/thumb/img-7.jpg' },\n    //     { src: 'assets/img/album-single/grid/img-9.jpg', thumbnail: 'assets/img/album-single/thumb/img-9.jpg' },\n    //     { src: 'assets/img/album-single/grid/img-10.jpg', thumbnail: 'assets/img/album-single/thumb/img-10.jpg' },\n    //     { src: 'assets/img/album-single/grid/img-11.jpg', thumbnail: 'assets/img/album-single/thumb/img-11.jpg' },\n    //     { src: 'assets/img/album-single/grid/img-12.jpg', thumbnail: 'assets/img/album-single/thumb/img-12.jpg' },\n    //     { src: 'assets/img/album-single/grid/img-13.jpg', thumbnail: 'assets/img/album-single/thumb/img-13.jpg' },\n    //     { src: 'assets/img/album-single/grid/img-14.jpg', thumbnail: 'assets/img/album-single/thumb/img-14.jpg' },\n    //     { src: 'assets/img/album-single/grid/img-15.jpg', thumbnail: 'assets/img/album-single/thumb/img-15.jpg' },\n    //     { src: 'assets/img/album-single/grid/img-16.jpg', thumbnail: 'assets/img/album-single/thumb/img-16.jpg' },\n    //     { src: 'assets/img/album-single/grid/img-17.jpg', thumbnail: 'assets/img/album-single/thumb/img-17.jpg' },\n    //     { src: 'assets/img/album-single/grid/img-18.jpg', thumbnail: 'assets/img/album-single/thumb/img-18.jpg' },\n    //     { src: 'assets/img/album-single/grid/img-18.jpg', thumbnail: 'assets/img/album-single/thumb/img-18.jpg' },\n    //     { src: 'assets/img/album-single/grid/img-18.jpg', thumbnail: 'assets/img/album-single/thumb/img-18.jpg' }\n    // ];","module.exports = \"\\n<div class=\\\"isotope gutter-2 col-6\\\">\\n\\n    <div class=\\\"gallery-top-content\\\">\\n  \\n      <div class=\\\"row margin-bottom-40\\\">\\n        <div class=\\\"col-md-8\\\">\\n  \\n          <!-- Begin isotope filter -->\\n          <div class=\\\"isotope-filter\\\">\\n  \\n            <!-- Begin isotope filter toggle button -->\\n            <div class=\\\"navbar-header visible-xs\\\">\\n              <button type=\\\"button\\\" class=\\\"navbar-toggle collapsed filter-toggle-btn\\\" (click)=\\\"toggleState()\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#isotope-filter-collapse\\\" aria-expanded=\\\"false\\\">\\n                <span class=\\\"text-center\\\">Filter <i class=\\\"fas fa-bars\\\"></i></span>\\n              </button>\\n            </div>\\n            <!-- End isotope filter toggle button -->\\n  \\n            <h2 class=\\\"filter-heading\\\">Filters</h2>\\n  \\n            <!-- Begin isotope filter links -->\\n            <div class=\\\"isotope-filter-links collapse navbar-collapse no-padding\\\" aria-expanded=\\\"false\\\" [ngClass]=\\\"{ 'in': isIn }\\\">\\n                <a *ngFor = \\\"let tag of tagItems; let i = index\\\" [ngClass]=\\\"{active : tagSelection === tagItems[i]}\\\" >{{tag}}</a>\\n            </div>\\n            <!-- End isotope filter links -->\\n  \\n          </div>\\n          <!-- End isotope filter -->\\n  \\n        </div> <!-- /.col -->\\n      </div> <!-- /.row -->\\n  \\n    </div> \\n   \\n\\n    <div class=\\\"isotope-items-wrap caption-gradient\\\">\\n      <div class=\\\"grid-sizer\\\"></div>\\n\\n\\n      <ng-masonry-grid (layoutComplete)=\\\"checkIfLoaded($event)\\\" \\n      (onNgMasonryInit)=\\\"onNgMasonryInit($event)\\\"\\n      [masonryOptions]=\\\"{gutter: 1, columnWidth: 1}\\\" \\n      [useAnimation]=\\\"true\\\"\\n      [useImagesLoaded]=\\\"true\\\"\\n      [scrollAnimationOptions]=\\\"{ animationEffect: 'effect-1', minDuration : 0, maxDuration : 0, viewportFactor : 8 }\\\">\\n      \\n        <ng-masonry-grid-item id=\\\"{{'masonry-item-'+i}}\\\"  [ngClass]=\\\"{'isotope-item item.tagAttr' : true}\\\" *ngFor=\\\"let album of albumItems| filterByTag:tagSelection; let i = index\\\">\\n          <!-- <p>{{i|json}}</p> -->\\n          <div class=\\\"album-list-item\\\">\\n            <a class=\\\"ali-link disabled\\\" href=\\\"{{href}}/{{album.name}}\\\">\\n              <div class=\\\"ali-img-wrap\\\">\\n                <img class=\\\"ali-img\\\" src=\\\"{{baseurl+album.image}}\\\" alt=\\\"image\\\">\\n              </div>\\n              <div class=\\\"ali-caption\\\">\\n                <h2 class=\\\"ali-title\\\">{{album.name}}</h2>\\n                <div class=\\\"ali-meta\\\">{{album.total}} photos</div>\\n              </div>\\n            </a>\\n          </div>\\n        </ng-masonry-grid-item>\\n\\n      </ng-masonry-grid>\\n\\n\\n  \\n\\n    </div>\\n  </div>\\n\\n  \"","import { Component, Input, OnInit, AfterContentInit, AfterViewInit, OnChanges, ElementRef, NgModule } from '@angular/core';\nimport { NgxMasonryOptions } from 'ngx-masonry';\nimport { ActivatedRoute } from '@angular/router';\nimport { Masonry, MasonryGridItem } from 'ng-masonry-grid';\n\n\n@Component({\n    selector: 'masonry-album-component',\n    templateUrl: './masonry-album.component.html',\n    styles: [`a:hover{cursor: pointer}`]\n})\n\n\nexport class MasonryAlbumComponent implements OnInit, OnChanges, AfterViewInit {\n\n    @Input() albumItems: any[];\n\n    public tagItems: any[];\n\n    private href: string;\n\n    public tagSelection: string;\n\n    private originalSet: any[];\n\n    public updateMasonryLayout = 0;\n\n    masonryItems : any[];\n\n    _masonry: Masonry;\n\n    isIn : boolean = false;   // store state\n\n    private baseurl = 'https://s3-us-west-1.amazonaws.com/kevintestbucket12345/';\n\n    constructor(private elementRef:ElementRef, private route: ActivatedRoute) {\n        this.tagSelection = 'All';\n    }\n\n    /* Options for masonry plug-in\n    */\n    public myOptions: NgxMasonryOptions = {\n        columnWidth: 1,\n        itemSelector: '.isotope-item',\n        gutter: 1,\n        transitionDuration: '0.5s',\n        //horizontalOrder: true,\n        resize: true,\n        fitWidth:false\n    };\n\n    ngOnInit(){\n    }\n\n\n    /*Functions waits for this.albumItems before initialization\n    */\n    ngOnChanges() {\n        let paramNdx = null;\n        if (!!this.albumItems) {\n            this.tagItems = this.getTagItems(this.albumItems);\n            this.originalSet = this.albumItems;\n            if(this.route.snapshot.queryParams['prefilter'] !== undefined){\n                this.tagSelection = decodeURI(this.route.snapshot.queryParams['prefilter']);\n                paramNdx = window.location.href.indexOf('?');\n            }\n        }\n        \n        this.href = (paramNdx !== null) ? window.location.href.substring(0, paramNdx) : window.location.href\n    }\n\n \n    /* get tag key value from this.albumItems for filter key words.\n    */\n    public getTagItems(items) {\n        let set = {};\n        let tagItems = [];\n        for (let i = 0, n = items.length; i < n; i++) {\n            if (!set[items[i].tag]) {\n                tagItems.push(items[i].tag);\n                set[items[i].tag] = true;\n            }\n        }\n        tagItems.unshift('All');\n        return tagItems;\n    }\n\n\n    ngAfterViewInit() {\n        this.elementRef.nativeElement.querySelector('.isotope-filter-links')\n            .addEventListener('click', this.onClick.bind(this));\n    }\n\n    toggleState() { // click handler\n        let bool = this.isIn;\n        this.isIn = bool === false ? true : false;\n      }\n\n\n    onClick(event){\n        \n        this.albumItems = this.originalSet;\n        this.tagSelection = event.target.text;\n\n        if(this.tagSelection === 'All'){\n            this._masonry.reloadItems();\n        }else if (!event){\n            this.tagSelection === 'All';\n        }\n        \n    }\n\n    public checkIfLoaded(e?: any) {\n        this._masonry.once('layoutComplete', () => {\n            this._masonry.items[0].element.classList.add('width2');\n        })\n    }\n\n    public onNgMasonryInit(e : Masonry) {\n        this._masonry = e;\n    }\n}","module.exports = \"\"","module.exports = \"<!-- Begin page header section -->\\n<section id=\\\"page-header-secion\\\" class=\\\"alter-heading\\\" header-image-component [props]=\\\"{\\n  image: 'https://images.unsplash.com/photo-1452587925148-ce544e77e70d?ixlib=rb-0.3.5&ixid=eyJhcHBfaWQiOjEyMDd9&s=54d6bc8400852ef2a25e64adde175db2&auto=format&fit=crop&w=2534&q=80',\\n  title : 'Portfolio',\\n  breadcrumb1: 'Home',\\n  breadcrumb2: 'Portfolio'\\n  }\\\">\\n</section>\\n<!-- End page header section -->\\n\\n\\n<!-- ============================ \\n\\t\\t\\t///// Begin content section /////\\n\\t\\t\\t============================= -->\\n<section id=\\\"content-section\\\">\\n  <div class=\\\"container-fluid\\\">\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-md-12\\\">\\n\\n        <!-- Begin content wrap -->\\n        <div class=\\\"content-wrap\\\">\\n            <masonry-album-component [albumItems] = \\\"Albums\\\"></masonry-album-component>\\n        </div>\\n        <!-- End content wrap -->\\n\\n      </div> <!-- /.col -->\\n    </div> <!-- /.row -->\\n  </div> <!-- /.container -->\\n</section>\\n<!-- End content section -->\\n\\n\"","import { Component, OnInit } from '@angular/core';\nimport { AlbumService } from '../admin/services/album/album.service';\nimport { PortfolioAlbumService } from './services/portfolio-album.service';\nimport { Observable } from 'rxjs';\nimport { Masonry, MasonryGridItem } from 'ng-masonry-grid';\n\n@Component({\n    selector: 'portfolio-component',\n    templateUrl: 'portfolio.component.html',\n    styleUrls: ['portfolio.component.css']\n})\n\nexport class PortfolioComponent implements OnInit {\n\n    public Albums: any[];\n\n    constructor(private portfolioService: PortfolioAlbumService) {\n    }\n    ngOnInit(){\n        this.portfolioService.getAllAlbums().subscribe((res:any) => {\n            this.Albums = res.items;\n        });\n    }\n}","import {Component, Injectable} from '@angular/core';\nimport { AlbumService } from 'src/app/admin/services/album/album.service';\nimport { Api } from 'src/app/shared/services/api/api';\nimport { IAlbum } from 'src/app/admin/services/album/album.entity';\nimport { HttpClient } from '@angular/common/http';\n\n@Injectable({ providedIn: 'root' })\n\n\nexport class PortfolioAlbumService extends Api<IAlbum> {\n    constructor(protected http: HttpClient, private albumService: AlbumService) {\n        super(http)\n    }\n\n    /* Function to get particular albums based on category.\n        * @category input used to retrieve particular tab category of view\n    */\n    public getAlbums(category:string){\n        let _category = category.charAt(0).toUpperCase() + category.slice(1);\n        return this.api(`albums/album/${_category}`, 'GET')\n    }\n    \n    /* Function to get all albums in server.\n    */    \n    public getAllAlbums(){\n        return this.api('albums', 'GET')\n    }\n\n\n    public getAlbumByName(nameOfAlbum: string, category: string) {\n        let _category = category.charAt(0).toUpperCase() + category.slice(1);\n        return this.api(`albums/album/${_category}/${nameOfAlbum}`, 'GET')\n    }\n    \n}","import {Component, Injectable} from '@angular/core';\nimport { AlbumService } from 'src/app/admin/services/album/album.service';\nimport { Api } from 'src/app/shared/services/api/api';\nimport { IAlbum } from 'src/app/admin/services/album/album.entity';\nimport { HttpClient } from '@angular/common/http';\n\n@Injectable({ providedIn: 'root' })\n\n\nexport class PortfolioPhotoService extends Api<IAlbum> {\n    constructor(protected http: HttpClient) {\n        super(http)\n    }\n\n    /* Function to get particular albums based on category.\n        * @category input used to retrieve particular tab category of view\n    */\n    public getPhotosFromAlbum(album:string){\n        let href = window.location.href;\n        //return this.api(`photos/${album}`, 'GET');\n    }\n    \n    /* Function to get all albums in server.\n    */    \n    public getAllPhotosFromAlbums(){\n        return this.api('photos', 'GET')\n    }\n    \n}","module.exports = \"<!-- Begin page header image \\n===============================\\n* Use class \\\"parallax\\\" to enable parallax effect.-->\\n<div class=\\\"page-header-image parallax bg-image\\\" style=\\\"background-image: url('https://images.unsplash.com/photo-1500051638674-ff996a0ec29e?ixlib=rb-0.3.5&ixid=eyJhcHBfaWQiOjEyMDd9&s=3969f232784b2b43d8bdbef93b603ffe&auto=format&fit=crop&w=1692&q=80'); background-position: 50% 50%;\\\"></div>\\n<!-- End page header image -->\\n\\n<!-- Element cover -->\\n<div class=\\\"cover page-header-cover\\\"></div>\\n\\n<!-- Begin page header info -->\\n<div class=\\\"container-fluid page-header-content no-padding\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-md-4\\\">\\n\\n      <h1 class=\\\"album-title\\\">{{props.title}}</h1>\\n\\n      <!-- Begin album meta -->\\n      <div class=\\\"album-meta\\\">\\n        <span class=\\\"photos-count\\\">{{props.numberOfPhotos}} Photos</span>\\n      </div>\\n      <!-- End album meta -->\\n\\n    </div> <!-- /.col -->\\n \\n    <div class=\\\"col-md-4\\\">\\n\\n      <!-- Begin album description -->\\n      <div class=\\\"album-description\\\">\\n        <div class=\\\"al-desc-inner\\\">\\n          <p>{{props.description}}</p>\\n        </div>\\n\\n      </div>\\n      <!-- End album description -->\\n\\n    </div> <!-- /.col -->\\n\\n    <div class=\\\"col-md-4\\\">\\n\\n      <!-- Begin album nav \\n                              ===================== -->\\n      <div class=\\\"album-nav\\\">\\n\\n\\n        <!-- style=\\\"background-image: url({{props.prevAlbumPhoto}}); background-position: 50% 50%;\\\" -->\\n\\n\\n        <!-- Begin album nav item -->\\n        <a *ngIf =\\\"props.prevAlbum.indexOf('/') !== props.prevAlbum.length-1\\\" href=\\\"{{props.prevAlbum}}\\\" class=\\\"an-item prev-album bg-image\\\" [style.background-image]=\\\"prevPhoto\\\" style=\\\"background-position: 50% 50%;\\\"\\n          title=\\\"Previous album\\\">\\n          <!-- Element cover -->\\n          <div class=\\\"cover\\\"></div>\\n\\n          <div class=\\\"an-item-info\\\">\\n            <span class=\\\"an-icon\\\"><i class=\\\"fas fa-chevron-left\\\"></i></span>\\n            <span class=\\\"an-text\\\">Prev</span>\\n          </div>\\n        </a>\\n        <!-- End album nav item -->\\n\\n        <!-- Begin album nav item -->\\n        <a href=\\\"/{{props.currentCategory}}\\\" class=\\\"an-item to-album-list bg-image\\\" style=\\\"background-image: url(assets/img/stock/image1.jpg); background-position: 50% 50%;\\\"\\n          title=\\\"Back to album list\\\">\\n          <!-- Element cover -->\\n          <div class=\\\"cover\\\"></div>\\n\\n          <div class=\\\"an-item-info\\\">\\n            <span class=\\\"an-icon\\\"><i class=\\\"fas fa-th-list\\\"></i></span>\\n            <span class=\\\"an-text\\\">List</span>\\n          </div>\\n        </a>\\n        <!-- End album nav item -->\\n\\n        <!-- Begin album nav item -->\\n        <a *ngIf =\\\"props.nextAlbum.indexOf('/') !== props.nextAlbum.length-1\\\" href=\\\"{{props.nextAlbum}}\\\" class=\\\"an-item next-album bg-image\\\" [style.background-image]=\\\"nextPhoto\\\" style=\\\"background-position: 50% 50%;\\\"\\n          title=\\\"Next album\\\">\\n          <!-- Element cover -->\\n          <div class=\\\"cover\\\"></div>\\n\\n          <div class=\\\"an-item-info\\\">\\n            <span class=\\\"an-icon\\\"><i class=\\\"fas fa-chevron-right\\\"></i></span>\\n            <span class=\\\"an-text\\\">Next</span>\\n          </div>\\n        </a>\\n        <!-- End album nav item -->\\n\\n      </div>\\n      <!-- End album nav -->\\n\\n    </div> <!-- /.col -->\\n  </div> <!-- /.row -->\\n</div>\\n<!-- End page header info -->\\n\"","import {Component, Input, OnInit, OnChanges} from '@angular/core';\nimport {IHeaderAlbum} from '../../models/Iheader-album';\nimport { DomSanitizer } from '@angular/platform-browser';\n\n@Component({\n    selector: '[album-header-component]',\n    templateUrl: './album-header.component.html'    \n})\n\n\n\n\nexport class AlbumHeaderComponent implements OnChanges{\n    @Input() props : IHeaderAlbum\n\n    private prevPhoto: any;\n    private nextPhoto: any;\n\n    constructor(private _sanitizer: DomSanitizer ) {\n    }\n\n    ngOnChanges(){\n        if(this.props.prevAlbumPhoto )\n            this.prevPhoto = this._sanitizer.bypassSecurityTrustStyle(`url(${this.props.prevAlbumPhoto})`);\n        if(this.props.nextAlbumPhoto)\n            this.nextPhoto = this._sanitizer.bypassSecurityTrustStyle(`url(${this.props.nextAlbumPhoto})`);\n    }\n\n}\n\n","import { Component, Input, Output, EventEmitter, ChangeDetectionStrategy, OnChanges } from '@angular/core';\nimport { AbstractControl } from '@angular/forms';\n\n\n\n@Component({\n    selector: 'checkbox-component',\n    template:\n        `\n        <div class = \"form-group checkbox-container\">\n            <label>\n                <input type=\"checkbox\" name=\"isActive\" [formControl] = \"control\" >\n                {{caption}}\n            </label>\n        </div>\n    `,\n    styles: [\n        `\n        .checkbox-container{\n        }\n    `],\n    changeDetection: ChangeDetectionStrategy.Default\n})\n\n\nexport class CheckboxComponent {\n    @Input() control: AbstractControl;\n    @Input() caption: string;\n}","import { Component, Input, Output, EventEmitter, ChangeDetectionStrategy, OnChanges } from '@angular/core';\nimport { AbstractControl } from '@angular/forms';\n\n\n\n@Component({\n    selector: 'dropdown-component',\n    template:\n        `\n        <div class = \"form-group\" [ngClass] = \"{'error' : control.invalid && (control.dirty || control.touched)}\">\n            <ng-select class=\"custom\" \n                [loading]=\"!items ? true : false\" \n                [items] = \"items\" \n                [formControl] = \"control\"\n                [markFirst] = \"markFirst\"\n                (change) = \"ngOnChanges()\"\n                [closeOnSelect] = \"true\"\n                placeholder='{{placeholder}}'>\n            </ng-select>\n        </div>\n    `,\n    styles: [\n        `\n        .error {\n            border: 1px solid #dc3545;\n            border-radius: 20px;\n            height: 45px;\n        }\n    `],\n    changeDetection: ChangeDetectionStrategy.Default\n})\n\n\nexport class DropDownComponent implements OnChanges{\n    @Input() control: AbstractControl;\n    @Input() placeholder: string;\n    @Input() items : any[];\n    @Input() markFirst? : boolean;\n\n    @Output() selection = new EventEmitter<any>();\n\n\n    ngOnChanges() {\n        let albumName = this.control.value;\n        this.selection.emit({ albumName});\n    }\n}","import { Component, Input } from '@angular/core';\nimport { AbstractControl } from '@angular/forms';\n\n\n\n@Component({\n    selector: 'input-component',\n    template:\n        `\n        <div class = \"form-group\" \n            [ngClass] = \"{'error' : control.invalid && (control.dirty || control.touched)}\">\n            <input type=\"{{type}}\" [formControl] = \"control\"  class=\"form-control\" name = \"{{control.parent}}\" placeholder=\"{{placeholder}}\" required>\n        </div>\n    `,\n    styles: [\n        `\n        .error {\n            border: 1px solid #dc3545;\n            border-radius: 20px;\n        }\n        .error p {\n            text-color: #dc3545;\n        }\n    `]\n})\n\nexport class InputComponent {\n    @Input() type: string;\n    @Input() control: AbstractControl;\n    @Input() placeholder: string;\n}","import { Component, Input } from '@angular/core';\nimport { AbstractControl } from '@angular/forms';\n\n@Component({\n    selector: 'textarea-component',\n    template:\n        `\n        <div class = \"form-group\" \n            [ngClass] = \"{'error' : control.invalid && (control.dirty || control.touched)}\">\n            <textarea type=\"text\" [formControl] = \"control\"  class=\"form-control\" name=\"{{control.parent}}\" rows = \"{{rows}}\" placeholder=\"{{placeholder}}\" required></textarea>\n        </div>\n    `,\n    styles: [\n        `\n        .error {\n            border: 1px solid #dc3545;\n            border-radius: 20px;\n        }\n        .error p {\n            text-color: #dc3545;\n        }\n    `]\n})\n\nexport class TextAreaComponent {\n    @Input() control: AbstractControl;\n    @Input() placeholder: string;\n    @Input() rows: number;\n}","module.exports = \"\\n  <!-- Begin page header image \\n       ===============================\\n    * Use class \\\"parallax\\\" to enable parallax effect.\\n    -->\\n  <div class=\\\"page-header-image parallax bg-image\\\" [style.background-image] = \\\"imageURL\\\" style=\\\"background-position: 50% 50%;\\\"></div>\\n  <!-- End page header image -->\\n\\n  <!-- Element cover -->\\n  <div class=\\\"cover page-header-cover\\\"></div>\\n\\n  <!-- Begin page header info -->\\n  <div class=\\\"container-fluid page-header-content no-padding\\\">\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-md-12\\\">\\n        \\n        <h1 class=\\\"album-title\\\">{{props.title}}</h1>\\n        <ol class=\\\"breadcrumb\\\">\\n                <li><a href=\\\"index.html\\\">{{props.breadcrumb1}}</a></li>\\n                <li class=\\\"active\\\">{{props.breadcrumb2}}</li>\\n        </ol>\\n\\n      </div> <!-- /.col -->\\n    </div> <!-- /.row -->\\n  </div>\\n  <!-- End page header info --> \\n\\n\\n\"","import {Component, ViewEncapsulation, Input, OnChanges} from '@angular/core';\nimport {IHeaderImage} from '../../models/Iheader-image';\nimport { DomSanitizer } from '@angular/platform-browser';\n\n\n@Component({\n    selector: '[header-image-component]',\n    templateUrl: './header-image.component.html',\n    styles:[],\n    encapsulation: ViewEncapsulation.None\n})\n\nexport class HeaderImageComponent implements OnChanges{\n\n    @Input() props : IHeaderImage\n    public imageURL : any;\n\n    constructor(private _sanitizer: DomSanitizer ){\n    }\n\n    ngOnChanges(){\n        this.imageURL = this._sanitizer.bypassSecurityTrustStyle(`url(${this.props.image})`);\n    }\n} ","module.exports = \"input[type=\\\"file\\\"] {\\n    display:none;\\n}\\n\\n.upload {\\n    border:0px;\\n    min-height: 45px;\\n    border-radius: 20px;\\n    position: relative;\\n    color: #555;\\n    margin-bottom: 18px;\\n    font-size: 12px;\\n    text-align: center;\\n}\\n\\n.upload-container {\\n    width: 100%;\\n    cursor: pointer;\\n    min-height: 45px;\\n    border-radius: 20px;\\n    position: relative;\\n    color: #999;\\n    background-color: #fff;\\n    border-color: rgba(204, 204, 204, 0.09);\\n    transition: all 0.2s ease-in-out;\\n}\\n\\n.upload-container:hover {\\n    cursor: pointer;\\n    background-color: #987F28;\\n    border-color: #987F28;\\n    color: black;\\n}\\n\\n.upload-label {\\n    text-transform: none;\\n    font-size: 12px;\\n    margin: 0 auto;\\n    position: relative;\\n    padding-left: 10px;\\n    top: 11px;\\n}\\n\\n.upload-status{\\n    float:right;\\n    right: 8px;\\n    margin: 0 auto;\\n    position: relative;\\n    padding-left: 10px;\\n    top: 16px;\\n}\\n\\nupload-status .glyphicon {\\n    color: #987F28;\\n}\\n\\n.upload-status:hover{\\n   color: black;\\n   cursor: pointer;\\n}\\n\\n.error {\\n    border: 1px solid #dc3545;\\n    border-radius: 20px;\\n}\"","module.exports = \"<div class=\\\"form-group\\\">\\n  <label class=\\\"upload-container\\\" [ngClass]=\\\"{'error': !control.value && control.invalid && (control.dirty || control.touched)}\\\">\\n    <input class=\\\"upload\\\" #imageInput type=\\\"file\\\" accept=\\\"image/*\\\" (change)=\\\"processFile($event)\\\" [disabled]=\\\"control.value\\\">\\n    <span class=\\\"upload-label\\\">\\n      {{ \\n        !fileName || !control.value || control.invalid ?  'Select Image *' : (innerWidth < 1000 ) ? fileName : (fileName.length> 20) ? (fileName |\\n        slice:0:20) + '..' : fileName\\n      \\n      }}\\n        <a *ngIf=\\\"fileName\\\" (click)=\\\"removeImage()\\\"><span class=\\\"upload-status glyphicon glyphicon-remove\\\" aria-hidden=\\\"true\\\"></span></a>\\n    </span>\\n    <input type=\\\"hidden\\\" name=\\\"fileHidden\\\" [formControl] = \\\"control\\\" minlength=\\\"1\\\" />\\n  </label>\\n</div>\\n\"","import { Component, EventEmitter, Output, Input, OnInit, ChangeDetectorRef, HostListener, DoCheck } from '@angular/core';\nimport { AbstractControl } from '@angular/forms';\n\n\nclass imageSnippet {\n    constructor(public src: string, public file: File) { }\n}\n\n@HostListener('window:resize', ['$event'])\n\n@Component({\n    selector: 'upload-component',\n    templateUrl: './upload.component.html',\n    styleUrls: ['./upload.component.css']\n})\n\nexport class UploadComponent implements OnInit, DoCheck {\n    public fileName: string;\n    public selectedItem: any;\n    public innerWidth: any;\n    public selectedFile : imageSnippet;\n\n    @Input() control: AbstractControl;\n    @Input() edit?: boolean;\n    @Output() returnFile = new EventEmitter<any>();\n\n\n    constructor(private cd: ChangeDetectorRef) { }\n\n\n    //\n\n    //Remove Item from the input, while updating controlName\n    private removeImage() {\n        this.fileName = null;\n        this.control.reset();\n    }\n\n    //Process file input\n    public processFile(event: any): void {\n\n        if (event.target.files && event.target.files.length) {\n\n            const [file] = event.target.files;\n\n            const reader = new FileReader();\n\n            reader.onload = (e:any) => {\n                this.control.patchValue({\n                    image: reader.result\n                })\n                \n                this.fileName = file.name;\n                this.selectedFile = new imageSnippet(e.target.result,file)\n\n                //return uploaded file\n                \n                this.returnFile.emit(this.selectedFile);\n            }\n            this.cd.markForCheck();\n            reader.readAsDataURL(file);\n        }\n\n\n    }\n    //Check for display screen size\n    ngOnInit() {\n        this.innerWidth = window.innerWidth;\n    }\n\n    ngDoCheck() {\n        if (typeof this.control.value !== 'object' && this.control.value !== null && !this.control.value.match('[A-Za-z_.-]')) {\n            this.fileName = this.control.value\n        }\n    }\n\n}","import {Directive, Input, Output, HostListener,EventEmitter} from '@angular/core';\nimport { FormGroup } from '@angular/forms';\n\n@Directive({\n    selector : '[tsSubmitIfValid]'\n})\n\nexport class SubmitFormIfValidDirective {\n    @Input('tsSubmitIfValid') formRef: FormGroup;\n    @Output() valid = new EventEmitter <void> ();\n\n    constructor() {}\n\n    @HostListener('click') \n    handleClick() {\n        this.markFieldAsDirty();\n        this.emitIfValid();\n    }\n\n    private markFieldAsDirty() {\n        Object.keys(this.formRef.controls).forEach(fieldName => {\n            this.formRef.controls[fieldName].markAsDirty();\n        })\n    }\n\n    private emitIfValid() {\n        if(this.formRef.valid)\n            this.valid.emit();\n    }\n\n}","import { Pipe, PipeTransform, Input } from '@angular/core';\n\n@Pipe({name: 'filterByTag'})\n\n\n\nexport class FilterByTagPipe implements PipeTransform {\n\n    private originalSet: any[]\n\n    transform(data: any[], tagInput:string){\n        if(tagInput !== 'All'){ \n            return (data.filter(itm=> itm.tag === tagInput));\n        }\n        return data;\n    }\n}","import { HttpClient, HttpHeaders, HttpHandler } from '@angular/common/http';\nimport { of, Observable } from 'rxjs';\nimport { map, catchError } from 'rxjs/operators';\nimport { ErrorResponseHandler } from '../../handlers/error-response';\n\nlet httpOptions = {\n    headers: new HttpHeaders({ 'Content-Type': ['application/json'] })\n};\n\nexport class Api<T> {\n    [x: string]: any;\n\n    constructor(protected http: HttpClient) { }\n\n\n    public baseURL = \"api\";\n\n\n    public extractData = (res: Response) => {\n        let body = res;\n        return body || {};\n    }\n\n    /* generic api function that performs the http requests\n       *@URL endpoint of the api route\n       *@action determines the type of request, parsed through a switch statement\n       *@payload data sent to change items in the db\n    */\n\n    public api = (URL: string, action: string, payload?: T): Observable<any> => {\n\n        let _url = `${this.baseURL}/${URL}`;\n\n        switch (action) {\n            case 'GET':\n                return this.http.get<T>(_url, httpOptions).pipe(\n                    map(this.extractData),\n                    catchError(this.ErrorResponseHandler)\n                )\n\n            case 'POST':\n                return this.http.post(_url, payload).pipe(\n                    map(this.extractData),\n                    catchError(this.ErrorResponseHandler)\n                )\n\n\n            case 'PUT':\n                return this.http.put<T>(_url, payload, httpOptions).pipe(\n                    map(this.extractData),\n                    catchError(this.ErrorResponseHandler)\n                )\n\n\n            case 'DELETE':\n                return this.http.delete<T>(_url, payload).pipe(\n                    map(this.extractData),\n                    catchError(this.ErrorResponseHandler)\n                )\n\n        }\n    }\n}\n\n\n","import { Injectable } from \"@angular/core\";\nimport { HttpClient } from '@angular/common/http';\nimport { Api } from \"./api\";\nimport { map, shareReplay } from \"rxjs/operators\";\nimport * as moment from \"moment\";\n\nclass User {\n    email: string;\n    password: string;\n}\n\n@Injectable({providedIn: 'root'})\nexport class AuthService extends Api<User> {\n    private apiRoute = 'login';\n\n    constructor(protected http: HttpClient) {\n        super(http);\n    }\n\n    public login(email: string, password: string){\n        return this.api(this.apiRoute, 'POST', {email, password}).pipe(\n            map((res:any) => { \n                if(res.error){ \n                    return false;\n                } else {\n                    this.setSession(res) \n                    return true;\n                }\n            }),\n            shareReplay())\n    }\n\n    private setSession(authResult){\n        const expiresAt = moment().add(authResult.expiresIn, 'second');\n        localStorage.setItem('id_token',authResult.token);\n        localStorage.setItem('expires_at',JSON.stringify(expiresAt.valueOf()));\n    }\n\n\n    public logout(){\n        localStorage.removeItem('id_token');\n        localStorage.removeItem('expires_at');\n    }\n\n    public isLoggedIn(){\n        return moment().isBefore(this.getExpiration());\n    }\n\n\n    public isLoggedOut() {\n        return !this.isLoggedIn();\n    }\n\n\n    public getExpiration() {\n        const expiration = localStorage.getItem('expires_at');\n        const expiresAt = JSON.parse(expiration);\n        return expiresAt;\n    }\n}","import {Injectable} from '@angular/core';\nimport {HttpClient, HttpHeaders} from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport {Api} from '../api';\n\n@Injectable({providedIn: 'root'})\n\nexport class S3Service extends Api<any>{\n    private apiRoute = 'aws';\n\n    constructor(protected http: HttpClient){\n        super(http);\n    }\n\n    public Upload (data: File) {\n        const formData = new FormData();\n        formData.append('image', data);\n\n        return this.api(this.apiRoute,'POST',formData);\n    }\n\n\n    public DeleteMedia (data: string[]) : Observable<any>{\n        let obj = {items : data};\n        let options = {\n            headers: new HttpHeaders({\n              'Content-Type': 'application/json',\n            }),\n            body: (obj)\n          };\n        return this.api(this.apiRoute, 'DELETE', options);\n        \n    }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n\n"],"sourceRoot":""}